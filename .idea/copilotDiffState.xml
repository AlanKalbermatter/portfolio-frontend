<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.env.example">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.env.example" />
              <option name="updatedContent" value="# API Configuration&#10;REACT_APP_API_URL=https://your-backend-api.railway.app&#10;&#10;# EmailJS Configuration&#10;# Get these from https://www.emailjs.com/&#10;REACT_APP_EMAILJS_SERVICE_ID=your_service_id_here&#10;REACT_APP_EMAILJS_TEMPLATE_ID=your_template_id_here  &#10;REACT_APP_EMAILJS_PUBLIC_KEY=your_public_key_here&#10;&#10;# Contact Information&#10;REACT_APP_CONTACT_EMAIL=your.email@domain.com&#10;&#10;# Environment&#10;NODE_ENV=production" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/.gitignore">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.gitignore" />
              <option name="updatedContent" value="# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.&#10;&#10;# dependencies&#10;/node_modules&#10;/.pnp&#10;.pnp.js&#10;&#10;# testing&#10;/coverage&#10;&#10;# production&#10;/build&#10;&#10;# misc&#10;.DS_Store&#10;.env&#10;.env.local&#10;.env.development.local&#10;.env.test.local&#10;.env.production.local&#10;&#10;npm-debug.log*&#10;yarn-debug.log*&#10;yarn-error.log*&#10;&#10;# Railway&#10;.railway" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/RAILWAY_DEPLOYMENT.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/RAILWAY_DEPLOYMENT.md" />
              <option name="updatedContent" value="# Railway Deployment Guide&#10;&#10;## Environment Variables Required&#10;&#10;Set these in your Railway dashboard:&#10;&#10;```&#10;REACT_APP_API_URL=https://your-backend-api.railway.app&#10;REACT_APP_EMAILJS_SERVICE_ID=your_service_id_here&#10;REACT_APP_EMAILJS_TEMPLATE_ID=your_template_id_here&#10;REACT_APP_EMAILJS_PUBLIC_KEY=your_public_key_here&#10;REACT_APP_CONTACT_EMAIL=alan.kalbermatter.dev@gmail.com&#10;NODE_ENV=production&#10;```&#10;&#10;## Custom Domain Setup&#10;&#10;1. In Railway dashboard, go to Settings &gt; Domains&#10;2. Add custom domain: alan-kalbermatter.com&#10;3. Update DNS records as shown in Railway dashboard&#10;&#10;## Deployment Commands&#10;&#10;Local build test:&#10;```bash&#10;npm run build&#10;npm run serve&#10;```&#10;&#10;Railway will automatically run:&#10;```bash&#10;npm run build &amp;&amp; npx serve -s build -l 3000&#10;```" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/nixpacks.toml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/nixpacks.toml" />
              <option name="originalContent" value="# Nixpacks configuration for Railway&#10;[phases.setup]&#10;nixPkgs = [&quot;nodejs&quot;, &quot;npm&quot;]&#10;&#10;[phases.install]&#10;cmd = &quot;npm ci&quot;&#10;&#10;[phases.build]&#10;cmd = &quot;npm run build&quot;&#10;&#10;[start]&#10;cmd = &quot;npx serve -s build -l $PORT&quot;&#10;" />
              <option name="updatedContent" value="# Nixpacks configuration for Railway&#10;[phases.setup]&#10;nixPkgs = [&quot;nodejs&quot;]&#10;&#10;[phases.install]&#10;cmd = &quot;npm ci&quot;&#10;&#10;[phases.build]&#10;cmd = &quot;npm run build&quot;&#10;&#10;[start]&#10;cmd = &quot;npx serve -s build -l $PORT&quot;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/public/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/index.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;utf-8&quot; /&gt;&#10;    &lt;link rel=&quot;icon&quot; href=&quot;%PUBLIC_URL%/favicon.ico&quot; /&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;&#10;    &lt;meta name=&quot;theme-color&quot; content=&quot;#000000&quot; /&gt;&#10;    &lt;meta&#10;      name=&quot;description&quot;&#10;      content=&quot;Web site created using create-react-app&quot;&#10;    /&gt;&#10;    &lt;link rel=&quot;apple-touch-icon&quot; href=&quot;%PUBLIC_URL%/logo192.png&quot; /&gt;&#10;    &lt;!--&#10;      manifest.json provides metadata used when your web app is installed on a&#10;      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/&#10;    --&gt;&#10;    &lt;link rel=&quot;manifest&quot; href=&quot;%PUBLIC_URL%/manifest.json&quot; /&gt;&#10;    &lt;!--&#10;      Notice the use of %PUBLIC_URL% in the tags above.&#10;      It will be replaced with the URL of the `public` folder during the build.&#10;      Only files inside the `public` folder can be referenced from the HTML.&#10;&#10;      Unlike &quot;/favicon.ico&quot; or &quot;favicon.ico&quot;, &quot;%PUBLIC_URL%/favicon.ico&quot; will&#10;      work correctly both with client-side routing and a non-root public URL.&#10;      Learn how to configure a non-root public URL by running `npm run build`.&#10;    --&gt;&#10;    &lt;title&gt;React App&lt;/title&gt;&#10;  &lt;/head&gt;&#10;  &lt;body&gt;&#10;    &lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&#10;    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;&#10;    &lt;!--&#10;      This HTML file is a template.&#10;      If you open it directly in the browser, you will see an empty page.&#10;&#10;      You can add webfonts, meta tags, or analytics to this file.&#10;      The build step will place the bundled scripts into the &lt;body&gt; tag.&#10;&#10;      To begin the development, run `npm start` or `yarn start`.&#10;      To create a production bundle, use `npm run build` or `yarn build`.&#10;    --&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;utf-8&quot; /&gt;&#10;    &lt;link rel=&quot;icon&quot; href=&quot;%PUBLIC_URL%/portfolio.png&quot; /&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;&#10;    &lt;meta name=&quot;theme-color&quot; content=&quot;#000000&quot; /&gt;&#10;    &lt;meta&#10;      name=&quot;description&quot;&#10;      content=&quot;Alan Kalbermatter - Portfolio&quot;&#10;    /&gt;&#10;    &lt;link rel=&quot;apple-touch-icon&quot; href=&quot;%PUBLIC_URL%/portfolio.png&quot; /&gt;&#10;    &lt;!--&#10;      manifest.json provides metadata used when your web app is installed on a&#10;      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/&#10;    --&gt;&#10;    &lt;link rel=&quot;manifest&quot; href=&quot;%PUBLIC_URL%/manifest.json&quot; /&gt;&#10;    &lt;!--&#10;      Notice the use of %PUBLIC_URL% in the tags above.&#10;      It will be replaced with the URL of the `public` folder during the build.&#10;      Only files inside the `public` folder can be referenced from the HTML.&#10;&#10;      Unlike &quot;/favicon.ico&quot; or &quot;favicon.ico&quot;, &quot;%PUBLIC_URL%/favicon.ico&quot; will&#10;      work correctly both with client-side routing and a non-root public URL.&#10;      Learn how to configure a non-root public URL by running `npm run build`.&#10;    --&gt;&#10;    &lt;title&gt;Alan Kalbermatter - Portfolio&lt;/title&gt;&#10;  &lt;/head&gt;&#10;  &lt;body&gt;&#10;    &lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&#10;    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;&#10;    &lt;!--&#10;      This HTML file is a template.&#10;      If you open it directly in the browser, you will see an empty page.&#10;&#10;      You can add webfonts, meta tags, or analytics to this file.&#10;      The build step will place the bundled scripts into the &lt;body&gt; tag.&#10;&#10;      To begin the development, run `npm start` or `yarn start`.&#10;      To create a production bundle, use `npm run build` or `yarn build`.&#10;    --&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/railway.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/railway.json" />
              <option name="originalContent" value="{&#10;  &quot;$schema&quot;: &quot;https://railway.app/railway.schema.json&quot;,&#10;  &quot;build&quot;: {&#10;    &quot;builder&quot;: &quot;NIXPACKS&quot;&#10;  },&#10;  &quot;deploy&quot;: {&#10;    &quot;startCommand&quot;: &quot;npm run build &amp;&amp; npx serve -s build -l 3000&quot;,&#10;    &quot;restartPolicyType&quot;: &quot;ON_FAILURE&quot;,&#10;    &quot;restartPolicyMaxRetries&quot;: 10&#10;  }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="{&#10;  &quot;$schema&quot;: &quot;https://railway.app/railway.schema.json&quot;,&#10;  &quot;build&quot;: {&#10;    &quot;builder&quot;: &quot;NIXPACKS&quot;&#10;  },&#10;  &quot;deploy&quot;: {&#10;    &quot;startCommand&quot;: &quot;npm run build &amp;&amp; npx serve -s build -l $PORT&quot;,&#10;    &quot;restartPolicyType&quot;: &quot;ON_FAILURE&quot;,&#10;    &quot;restartPolicyMaxRetries&quot;: 10&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/About.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/About.tsx" />
              <option name="originalContent" value="import React, { useEffect, useState } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { personalInfoApi } from '../services/api';&#10;import { PersonalInfo } from '../types';&#10;&#10;const About: React.FC = () =&gt; {&#10;  const [personalInfo, setPersonalInfo] = useState&lt;PersonalInfo | null&gt;(null);&#10;  const [loading, setLoading] = useState(true);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchPersonalInfo = async () =&gt; {&#10;      try {&#10;        const response = await personalInfoApi.get();&#10;        setPersonalInfo(response.data);&#10;      } catch (error) {&#10;        console.error('Error fetching personal info:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchPersonalInfo();&#10;  }, []);&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;about&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-48 mx-auto mb-16&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12 items-center&quot;&gt;&#10;              &lt;div className=&quot;space-y-4&quot;&gt;&#10;                &lt;div className=&quot;h-4 bg-gray-200 rounded w-full&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-4 bg-gray-200 rounded w-5/6&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-4 bg-gray-200 rounded w-4/6&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;h-64 bg-gray-200 rounded-lg&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section id=&quot;about&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          whileInView={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          viewport={{ once: true }}&#10;          className=&quot;text-center mb-16&quot;&#10;        &gt;&#10;          &lt;h2 className=&quot;text-4xl md:text-5xl font-bold text-gray-900 mb-4&quot;&gt;&#10;            About Me&#10;          &lt;/h2&gt;&#10;          &lt;div className=&quot;w-20 h-1 bg-blue-600 mx-auto&quot;&gt;&lt;/div&gt;&#10;        &lt;/motion.div&gt;&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12 items-center&quot;&gt;&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, x: -20 }}&#10;            whileInView={{ opacity: 1, x: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.2 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;space-y-6&quot;&#10;          &gt;&#10;            &lt;div className=&quot;prose prose-lg text-gray-600 max-w-none&quot;&gt;&#10;              &lt;p className=&quot;text-xl leading-relaxed&quot;&gt;&#10;                {personalInfo?.summary || &quot;I'm a passionate software developer with a love for creating innovative solutions that make a difference.&quot;}&#10;              &lt;/p&gt;&#10;&#10;              &lt;div className=&quot;mt-8 space-y-4&quot;&gt;&#10;                &lt;div className=&quot;flex items-center&quot;&gt;&#10;                  &lt;span className=&quot;font-semibold text-gray-900 w-24&quot;&gt;Name:&lt;/span&gt;&#10;                  &lt;span className=&quot;text-gray-600&quot;&gt;{personalInfo?.fullName || 'Alan Kalbermatter'}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center&quot;&gt;&#10;                  &lt;span className=&quot;font-semibold text-gray-900 w-24&quot;&gt;Role:&lt;/span&gt;&#10;                  &lt;span className=&quot;text-gray-600&quot;&gt;{personalInfo?.title || 'Software Developer'}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center&quot;&gt;&#10;                  &lt;span className=&quot;font-semibold text-gray-900 w-24&quot;&gt;Location:&lt;/span&gt;&#10;                  &lt;span className=&quot;text-gray-600&quot;&gt;{personalInfo?.location || 'Remote'}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center&quot;&gt;&#10;                  &lt;span className=&quot;font-semibold text-gray-900 w-24&quot;&gt;Email:&lt;/span&gt;&#10;                  &lt;a&#10;                    href={`mailto:${personalInfo?.email}`}&#10;                    className=&quot;text-blue-600 hover:text-blue-700 transition-colors&quot;&#10;                  &gt;&#10;                    {personalInfo?.email || 'alan.kalbermatter.dev@gmail.com'}&#10;                  &lt;/a&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;flex flex-wrap gap-4 pt-6&quot;&gt;&#10;              {personalInfo?.resumeUrl &amp;&amp; (&#10;                &lt;a&#10;                  href={personalInfo.resumeUrl}&#10;                  target=&quot;_blank&quot;&#10;                  rel=&quot;noopener noreferrer&quot;&#10;                  className=&quot;inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-all duration-200 transform hover:scale-105&quot;&#10;                &gt;&#10;                  &lt;svg className=&quot;w-5 h-5 mr-2&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                    &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z&quot; /&gt;&#10;                  &lt;/svg&gt;&#10;                  Download Resume&#10;                &lt;/a&gt;&#10;              )}&#10;&#10;              &lt;button&#10;                onClick={() =&gt; {&#10;                  const element = document.getElementById('contact');&#10;                  if (element) element.scrollIntoView({ behavior: 'smooth' });&#10;                }}&#10;                className=&quot;inline-flex items-center px-6 py-3 border-2 border-gray-300 text-gray-700 rounded-lg font-medium hover:border-blue-600 hover:text-blue-600 transition-all duration-200&quot;&#10;              &gt;&#10;                &lt;svg className=&quot;w-5 h-5 mr-2&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                  &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z&quot; /&gt;&#10;                &lt;/svg&gt;&#10;                Get In Touch&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, x: 20 }}&#10;            whileInView={{ opacity: 1, x: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.4 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;relative&quot;&#10;          &gt;&#10;            &lt;div className=&quot;relative z-10&quot;&gt;&#10;              {personalInfo?.profileImageUrl ? (&#10;                &lt;img&#10;                  src={personalInfo.profileImageUrl}&#10;                  className=&quot;w-full max-w-md mx-auto rounded-2xl shadow-2xl object-cover&quot;&#10;                /&gt;&#10;              ) : (&#10;                &lt;div className=&quot;w-full max-w-md mx-auto h-96 bg-gradient-to-br from-blue-100 to-blue-200 rounded-2xl shadow-2xl flex items-center justify-center&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;div className=&quot;w-24 h-24 bg-blue-600 rounded-full mx-auto mb-4 flex items-center justify-center&quot;&gt;&#10;                      &lt;svg className=&quot;w-12 h-12 text-white&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                        &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z&quot; /&gt;&#10;                      &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;p className=&quot;text-blue-600 font-medium&quot;&gt;Profile Image&lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/div&gt;&#10;&#10;            {/* Decorative elements */}&#10;            &lt;div className=&quot;absolute -top-4 -right-4 w-72 h-72 bg-blue-100 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-pulse&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;absolute -bottom-8 -left-4 w-72 h-72 bg-purple-100 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-pulse&quot;&gt;&lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default About;&#10;" />
              <option name="updatedContent" value="import React, { useEffect, useState } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { personalInfoApi } from '../services/api';&#10;import { PersonalInfo } from '../types';&#10;&#10;const About: React.FC = () =&gt; {&#10;  const [personalInfo, setPersonalInfo] = useState&lt;PersonalInfo | null&gt;(null);&#10;  const [loading, setLoading] = useState(true);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchPersonalInfo = async () =&gt; {&#10;      try {&#10;        const response = await personalInfoApi.get();&#10;        setPersonalInfo(response.data);&#10;      } catch (error) {&#10;        console.error('Error fetching personal info:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchPersonalInfo();&#10;  }, []);&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;about&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-48 mx-auto mb-16&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12 items-center&quot;&gt;&#10;              &lt;div className=&quot;space-y-4&quot;&gt;&#10;                &lt;div className=&quot;h-4 bg-gray-200 rounded w-full&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-4 bg-gray-200 rounded w-5/6&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-4 bg-gray-200 rounded w-4/6&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;h-64 bg-gray-200 rounded-lg&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section id=&quot;about&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          whileInView={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          viewport={{ once: true }}&#10;          className=&quot;text-center mb-16&quot;&#10;        &gt;&#10;          &lt;h2 className=&quot;text-4xl md:text-5xl font-bold text-gray-900 mb-4&quot;&gt;&#10;            About Me&#10;          &lt;/h2&gt;&#10;          &lt;div className=&quot;w-20 h-1 bg-blue-600 mx-auto&quot;&gt;&lt;/div&gt;&#10;        &lt;/motion.div&gt;&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12 items-center&quot;&gt;&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, x: -20 }}&#10;            whileInView={{ opacity: 1, x: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.2 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;space-y-6&quot;&#10;          &gt;&#10;            &lt;div className=&quot;prose prose-lg text-gray-600 max-w-none&quot;&gt;&#10;              &lt;p className=&quot;text-xl leading-relaxed&quot;&gt;&#10;                {personalInfo?.summary || &quot;I'm a passionate software developer with a love for creating innovative solutions that make a difference.&quot;}&#10;              &lt;/p&gt;&#10;&#10;              &lt;div className=&quot;mt-8 space-y-4&quot;&gt;&#10;                &lt;div className=&quot;flex items-center&quot;&gt;&#10;                  &lt;span className=&quot;font-semibold text-gray-900 w-24&quot;&gt;Name:&lt;/span&gt;&#10;                  &lt;span className=&quot;text-gray-600&quot;&gt;{personalInfo?.fullName || 'Alan Kalbermatter'}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center&quot;&gt;&#10;                  &lt;span className=&quot;font-semibold text-gray-900 w-24&quot;&gt;Role:&lt;/span&gt;&#10;                  &lt;span className=&quot;text-gray-600&quot;&gt;{personalInfo?.title || 'Software Developer'}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center&quot;&gt;&#10;                  &lt;span className=&quot;font-semibold text-gray-900 w-24&quot;&gt;Location:&lt;/span&gt;&#10;                  &lt;span className=&quot;text-gray-600&quot;&gt;{personalInfo?.location || 'Remote'}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center&quot;&gt;&#10;                  &lt;span className=&quot;font-semibold text-gray-900 w-24&quot;&gt;Email:&lt;/span&gt;&#10;                  &lt;a&#10;                    href={`mailto:${personalInfo?.email}`}&#10;                    className=&quot;text-blue-600 hover:text-blue-700 transition-colors&quot;&#10;                  &gt;&#10;                    {personalInfo?.email || 'alan.kalbermatter.dev@gmail.com'}&#10;                  &lt;/a&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;flex flex-wrap gap-4 pt-6&quot;&gt;&#10;              {personalInfo?.resumeUrl &amp;&amp; (&#10;                &lt;a&#10;                  href={personalInfo.resumeUrl}&#10;                  target=&quot;_blank&quot;&#10;                  rel=&quot;noopener noreferrer&quot;&#10;                  className=&quot;inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-all duration-200 transform hover:scale-105&quot;&#10;                &gt;&#10;                  &lt;svg className=&quot;w-5 h-5 mr-2&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                    &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z&quot; /&gt;&#10;                  &lt;/svg&gt;&#10;                  Download Resume&#10;                &lt;/a&gt;&#10;              )}&#10;&#10;              &lt;button&#10;                onClick={() =&gt; {&#10;                  const element = document.getElementById('contact');&#10;                  if (element) element.scrollIntoView({ behavior: 'smooth' });&#10;                }}&#10;                className=&quot;inline-flex items-center px-6 py-3 border-2 border-gray-300 text-gray-700 rounded-lg font-medium hover:border-blue-600 hover:text-blue-600 transition-all duration-200&quot;&#10;              &gt;&#10;                &lt;svg className=&quot;w-5 h-5 mr-2&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                  &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z&quot; /&gt;&#10;                &lt;/svg&gt;&#10;                Get In Touch&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, x: 20 }}&#10;            whileInView={{ opacity: 1, x: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.4 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;relative&quot;&#10;          &gt;&#10;            &lt;div className=&quot;relative z-10&quot;&gt;&#10;              {personalInfo?.profileImageUrl ? (&#10;                &lt;img&#10;                  src={personalInfo.profileImageUrl}&#10;                  alt={`${personalInfo.name || 'Alan Kalbermatter'} - Professional headshot`}&#10;                  className=&quot;w-full max-w-md mx-auto rounded-2xl shadow-2xl object-cover&quot;&#10;                /&gt;&#10;              ) : (&#10;                &lt;div className=&quot;w-full max-w-md mx-auto h-96 bg-gradient-to-br from-blue-100 to-blue-200 rounded-2xl shadow-2xl flex items-center justify-center&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;div className=&quot;w-24 h-24 bg-blue-600 rounded-full mx-auto mb-4 flex items-center justify-center&quot;&gt;&#10;                      &lt;svg className=&quot;w-12 h-12 text-white&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                        &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z&quot; /&gt;&#10;                      &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;p className=&quot;text-blue-600 font-medium&quot;&gt;Profile Image&lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/div&gt;&#10;&#10;            {/* Decorative elements */}&#10;            &lt;div className=&quot;absolute -top-4 -right-4 w-72 h-72 bg-blue-100 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-pulse&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;absolute -bottom-8 -left-4 w-72 h-72 bg-purple-100 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-pulse&quot;&gt;&lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default About;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/Contact.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/Contact.tsx" />
              <option name="originalContent" value="import React, { useEffect, useState, useRef } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { EnvelopeIcon, PhoneIcon, MapPinIcon } from '@heroicons/react/24/outline';&#10;import emailjs from '@emailjs/browser';&#10;import { personalInfoApi } from '../services/api';&#10;import { PersonalInfo } from '../types';&#10;&#10;// EmailJS configuration - using environment variables only&#10;const EMAILJS_SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICE_ID;&#10;const EMAILJS_TEMPLATE_ID = process.env.REACT_APP_EMAILJS_TEMPLATE_ID;&#10;const EMAILJS_PUBLIC_KEY = process.env.REACT_APP_EMAILJS_PUBLIC_KEY;&#10;&#10;const Contact: React.FC = () =&gt; {&#10;  const [personalInfo, setPersonalInfo] = useState&lt;PersonalInfo | null&gt;(null);&#10;  const [loading, setLoading] = useState(true);&#10;  const [isSubmitting, setIsSubmitting] = useState(false);&#10;  const [submitStatus, setSubmitStatus] = useState&lt;'idle' | 'success' | 'error'&gt;('idle');&#10;  const [errorMessage, setErrorMessage] = useState('');&#10;&#10;  const form = useRef&lt;HTMLFormElement&gt;(null);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchPersonalInfo = async () =&gt; {&#10;      try {&#10;        const response = await personalInfoApi.get();&#10;        setPersonalInfo(response.data);&#10;      } catch (error) {&#10;        console.error('Error fetching personal info:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchPersonalInfo();&#10;  }, []);&#10;&#10;  const handleSubmit = async (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    setIsSubmitting(true);&#10;    setSubmitStatus('idle');&#10;    setErrorMessage('');&#10;&#10;    // Since we now have real credentials as fallbacks, always try EmailJS first&#10;    if (form.current) {&#10;      try {&#10;        // Get form data and prepare JSON object&#10;        const formData = new FormData(form.current);&#10;        const templateParams = {&#10;          from_name: formData.get('from_name') as string,&#10;          from_email: formData.get('from_email') as string,&#10;          subject: formData.get('subject') as string,&#10;          message: formData.get('message') as string,&#10;          to_email: personalInfo?.email || 'alan.kalbermatter.dev@gmail.com',&#10;          reply_to: formData.get('from_email') as string,&#10;        };&#10;&#10;        // Debug: Log what we're about to send&#10;        console.log('=== DEBUGGING EMAILJS REQUEST ===');&#10;        console.log('SERVICE_ID:', EMAILJS_SERVICE_ID);&#10;        console.log('TEMPLATE_ID:', EMAILJS_TEMPLATE_ID);&#10;        console.log('PUBLIC_KEY:', EMAILJS_PUBLIC_KEY);&#10;        console.log('Template params:');&#10;        console.log(JSON.stringify(templateParams, null, 2));&#10;&#10;        const result = await emailjs.send(&#10;          EMAILJS_SERVICE_ID,&#10;          EMAILJS_TEMPLATE_ID,&#10;          templateParams,&#10;          EMAILJS_PUBLIC_KEY&#10;        );&#10;&#10;        console.log('Email sent successfully:', result.text);&#10;        setSubmitStatus('success');&#10;        form.current.reset(); // Reset the form after success&#10;&#10;      } catch (error: any) {&#10;        console.error('Failed to send email:', error);&#10;        console.error('Error details:', error.response || error);&#10;        setSubmitStatus('error');&#10;        setErrorMessage(error.text || 'EmailJS service failed. Using email client fallback.');&#10;&#10;        // Auto-fallback to mailto after showing error briefly&#10;        setTimeout(() =&gt; {&#10;          handleMailtoFallback();&#10;        }, 2000);&#10;      } finally {&#10;        setIsSubmitting(false);&#10;      }&#10;    }&#10;  };&#10;&#10;  // Alternative: Simple mailto fallback&#10;  const handleMailtoFallback = () =&gt; {&#10;    if (form.current) {&#10;      const formData = new FormData(form.current);&#10;      const name = formData.get('from_name') as string;&#10;      const email = formData.get('from_email') as string;&#10;      const subject = formData.get('subject') as string;&#10;      const message = formData.get('message') as string;&#10;&#10;      const mailtoSubject = encodeURIComponent(subject || 'Portfolio Contact');&#10;      const mailtoBody = encodeURIComponent(&#10;        `Name: ${name}\nEmail: ${email}\n\nMessage:\n${message}`&#10;      );&#10;      const mailtoUrl = `mailto:${personalInfo?.email || 'alan.kalbermatter.dev@gmail.com'}?subject=${mailtoSubject}&amp;body=${mailtoBody}`;&#10;      window.location.href = mailtoUrl;&#10;    }&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;contact&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-48 mx-auto mb-16&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12&quot;&gt;&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                {[...Array(4)].map((_, i) =&gt; (&#10;                  &lt;div key={i} className=&quot;h-12 bg-gray-200 rounded&quot;&gt;&lt;/div&gt;&#10;                ))}&#10;                &lt;div className=&quot;h-32 bg-gray-200 rounded&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                {[...Array(3)].map((_, i) =&gt; (&#10;                  &lt;div key={i} className=&quot;flex items-center space-x-4&quot;&gt;&#10;                    &lt;div className=&quot;w-12 h-12 bg-gray-200 rounded&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;flex-1 space-y-2&quot;&gt;&#10;                      &lt;div className=&quot;h-4 bg-gray-200 rounded w-1/3&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;h-3 bg-gray-200 rounded w-2/3&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section id=&quot;contact&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          whileInView={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          viewport={{ once: true }}&#10;          className=&quot;text-center mb-16&quot;&#10;        &gt;&#10;          &lt;h2 className=&quot;text-4xl md:text-5xl font-bold text-gray-900 mb-4&quot;&gt;&#10;            Get In Touch&#10;          &lt;/h2&gt;&#10;          &lt;div className=&quot;w-20 h-1 bg-blue-600 mx-auto mb-6&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;text-xl text-gray-600 max-w-3xl mx-auto&quot;&gt;&#10;            I'm always interested in new opportunities and collaborations.&#10;            Let's discuss how we can work together!&#10;          &lt;/p&gt;&#10;        &lt;/motion.div&gt;&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12&quot;&gt;&#10;          {/* Contact Form */}&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, x: -20 }}&#10;            whileInView={{ opacity: 1, x: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.2 }}&#10;            viewport={{ once: true }}&#10;          &gt;&#10;            &lt;div className=&quot;bg-gray-50 rounded-2xl p-8&quot;&gt;&#10;              &lt;h3 className=&quot;text-2xl font-bold text-gray-900 mb-6&quot;&gt;Send me a message&lt;/h3&gt;&#10;&#10;              &lt;form ref={form} onSubmit={handleSubmit} className=&quot;space-y-6&quot;&gt;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label htmlFor=&quot;name&quot; className=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;&#10;                      Name *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      id=&quot;name&quot;&#10;                      name=&quot;from_name&quot;&#10;                      required&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-600 focus:border-transparent transition-all duration-200&quot;&#10;                      placeholder=&quot;Your name&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label htmlFor=&quot;email&quot; className=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;&#10;                      Email *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;email&quot;&#10;                      id=&quot;email&quot;&#10;                      name=&quot;from_email&quot;&#10;                      required&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-600 focus:border-transparent transition-all duration-200&quot;&#10;                      placeholder=&quot;alan.kalbermatter.dev@gmail.com&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div&gt;&#10;                  &lt;label htmlFor=&quot;subject&quot; className=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;&#10;                    Subject *&#10;                  &lt;/label&gt;&#10;                  &lt;input&#10;                    type=&quot;text&quot;&#10;                    id=&quot;subject&quot;&#10;                    name=&quot;subject&quot;&#10;                    required&#10;                    className=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-600 focus:border-transparent transition-all duration-200&quot;&#10;                    placeholder=&quot;What's this about?&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div&gt;&#10;                  &lt;label htmlFor=&quot;message&quot; className=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;&#10;                    Message *&#10;                  &lt;/label&gt;&#10;                  &lt;textarea&#10;                    id=&quot;message&quot;&#10;                    name=&quot;message&quot;&#10;                    required&#10;                    rows={5}&#10;                    className=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-600 focus:border-transparent transition-all duration-200 resize-none&quot;&#10;                    placeholder=&quot;Tell me about your project or just say hello!&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;button&#10;                  type=&quot;submit&quot;&#10;                  disabled={isSubmitting}&#10;                  className={`w-full py-3 px-6 rounded-lg font-medium transition-all duration-200 transform hover:scale-105 ${&#10;                    isSubmitting&#10;                      ? 'bg-gray-400 cursor-not-allowed'&#10;                      : 'bg-blue-600 hover:bg-blue-700 text-white shadow-lg'&#10;                  }`}&#10;                &gt;&#10;                  {isSubmitting ? (&#10;                    &lt;div className=&quot;flex items-center justify-center&quot;&gt;&#10;                      &lt;svg className=&quot;animate-spin -ml-1 mr-3 h-5 w-5 text-white&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                        &lt;circle className=&quot;opacity-25&quot; cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;4&quot;&gt;&lt;/circle&gt;&#10;                        &lt;path className=&quot;opacity-75&quot; fill=&quot;currentColor&quot; d=&quot;M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z&quot;&gt;&lt;/path&gt;&#10;                      &lt;/svg&gt;&#10;                      Sending...&#10;                    &lt;/div&gt;&#10;                  ) : (&#10;                    'Send Message'&#10;                  )}&#10;                &lt;/button&gt;&#10;&#10;                {/* Fallback mailto button */}&#10;                &lt;div className=&quot;text-center&quot;&gt;&#10;                  &lt;button&#10;                    type=&quot;button&quot;&#10;                    onClick={handleMailtoFallback}&#10;                    className=&quot;text-blue-600 hover:text-blue-700 text-sm font-medium underline transition-colors&quot;&#10;                  &gt;&#10;                    Or send email directly with your email client&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Status Messages */}&#10;                {submitStatus === 'success' &amp;&amp; (&#10;                  &lt;div className=&quot;p-4 bg-green-100 border border-green-400 text-green-700 rounded-lg&quot;&gt;&#10;                    ✅ Message sent successfully! I'll get back to you soon.&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                {submitStatus === 'error' &amp;&amp; (&#10;                  &lt;div className=&quot;p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg&quot;&gt;&#10;                    ❌ Something went wrong. Please try again or contact me directly.&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                {/* Error Message for EmailJS */}&#10;                {submitStatus === 'error' &amp;&amp; errorMessage &amp;&amp; (&#10;                  &lt;div className=&quot;p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg&quot;&gt;&#10;                    ❌ {errorMessage}&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/form&gt;&#10;            &lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;&#10;          {/* Contact Information */}&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, x: 20 }}&#10;            whileInView={{ opacity: 1, x: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.4 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;space-y-8&quot;&#10;          &gt;&#10;            &lt;div&gt;&#10;              &lt;h3 className=&quot;text-2xl font-bold text-gray-900 mb-6&quot;&gt;Contact Information&lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 mb-8&quot;&gt;&#10;                Feel free to reach out through any of these channels. I typically respond within 24 hours.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;space-y-6&quot;&gt;&#10;              {/* Email */}&#10;              &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                &lt;div className=&quot;flex-shrink-0 w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center&quot;&gt;&#10;                  &lt;EnvelopeIcon className=&quot;w-6 h-6 text-blue-600&quot; /&gt;&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;h4 className=&quot;font-semibold text-gray-900&quot;&gt;Email&lt;/h4&gt;&#10;                  &lt;a&#10;                    href={`mailto:${personalInfo?.email}`}&#10;                    className=&quot;text-gray-600 hover:text-blue-600 transition-colors&quot;&#10;                  &gt;&#10;                    {personalInfo?.email || 'alan.kalbermatter.dev@gmail.com'}&#10;                  &lt;/a&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Phone */}&#10;              {personalInfo?.phone &amp;&amp; (&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;div className=&quot;flex-shrink-0 w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center&quot;&gt;&#10;                    &lt;PhoneIcon className=&quot;w-6 h-6 text-green-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h4 className=&quot;font-semibold text-gray-900&quot;&gt;Phone&lt;/h4&gt;&#10;                    &lt;a&#10;                      href={`tel:${personalInfo.phone}`}&#10;                      className=&quot;text-gray-600 hover:text-green-600 transition-colors&quot;&#10;                    &gt;&#10;                      {personalInfo.phone}&#10;                    &lt;/a&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;&#10;              {/* Location */}&#10;              &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                &lt;div className=&quot;flex-shrink-0 w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center&quot;&gt;&#10;                  &lt;MapPinIcon className=&quot;w-6 h-6 text-purple-600&quot; /&gt;&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;h4 className=&quot;font-semibold text-gray-900&quot;&gt;Location&lt;/h4&gt;&#10;                  &lt;p className=&quot;text-gray-600&quot;&gt;&#10;                    {personalInfo?.location || 'Remote'}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Social Links */}&#10;            &lt;div className=&quot;pt-8 border-t border-gray-200&quot;&gt;&#10;              &lt;h4 className=&quot;font-semibold text-gray-900 mb-4&quot;&gt;Connect with me&lt;/h4&gt;&#10;              &lt;div className=&quot;flex space-x-4&quot;&gt;&#10;                {personalInfo?.githubUrl &amp;&amp; (&#10;                  &lt;a&#10;                    href={personalInfo.githubUrl}&#10;                    target=&quot;_blank&quot;&#10;                    rel=&quot;noopener noreferrer&quot;&#10;                    className=&quot;w-10 h-10 bg-gray-100 rounded-lg flex items-center justify-center text-gray-600 hover:text-gray-900 hover:bg-gray-200 transition-all duration-200&quot;&#10;                  &gt;&#10;                    &lt;svg className=&quot;w-5 h-5&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                      &lt;path d=&quot;M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z&quot;/&gt;&#10;                    &lt;/svg&gt;&#10;                  &lt;/a&gt;&#10;                )}&#10;&#10;                {personalInfo?.linkedinUrl &amp;&amp; (&#10;                  &lt;a&#10;                    href={personalInfo.linkedinUrl}&#10;                    target=&quot;_blank&quot;&#10;                    rel=&quot;noopener noreferrer&quot;&#10;                    className=&quot;w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center text-blue-600 hover:text-blue-700 hover:bg-blue-200 transition-all duration-200&quot;&#10;                  &gt;&#10;                    &lt;svg className=&quot;w-5 h-5&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                      &lt;path d=&quot;M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z&quot;/&gt;&#10;                    &lt;/svg&gt;&#10;                  &lt;/a&gt;&#10;                )}&#10;&#10;                {personalInfo?.twitterUrl &amp;&amp; (&#10;                  &lt;a&#10;                    href={personalInfo.twitterUrl}&#10;                    target=&quot;_blank&quot;&#10;                    rel=&quot;noopener noreferrer&quot;&#10;                    className=&quot;w-10 h-10 bg-sky-100 rounded-lg flex items-center justify-center text-sky-600 hover:text-sky-700 hover:bg-sky-200 transition-all duration-200&quot;&#10;                  &gt;&#10;                    &lt;svg className=&quot;w-5 h-5&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                      &lt;path d=&quot;M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z&quot;/&gt;&#10;                    &lt;/svg&gt;&#10;                  &lt;/a&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default Contact;&#10;" />
              <option name="updatedContent" value="import React, { useEffect, useState, useRef } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { EnvelopeIcon, PhoneIcon, MapPinIcon } from '@heroicons/react/24/outline';&#10;import emailjs from '@emailjs/browser';&#10;import { personalInfoApi } from '../services/api';&#10;import { PersonalInfo } from '../types';&#10;&#10;// EmailJS configuration - using environment variables only&#10;const EMAILJS_SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICE_ID;&#10;const EMAILJS_TEMPLATE_ID = process.env.REACT_APP_EMAILJS_TEMPLATE_ID;&#10;const EMAILJS_PUBLIC_KEY = process.env.REACT_APP_EMAILJS_PUBLIC_KEY;&#10;&#10;const Contact: React.FC = () =&gt; {&#10;  const [personalInfo, setPersonalInfo] = useState&lt;PersonalInfo | null&gt;(null);&#10;  const [loading, setLoading] = useState(true);&#10;  const [isSubmitting, setIsSubmitting] = useState(false);&#10;  const [submitStatus, setSubmitStatus] = useState&lt;'idle' | 'success' | 'error'&gt;('idle');&#10;  const [errorMessage, setErrorMessage] = useState('');&#10;&#10;  const form = useRef&lt;HTMLFormElement&gt;(null);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchPersonalInfo = async () =&gt; {&#10;      try {&#10;        const response = await personalInfoApi.get();&#10;        setPersonalInfo(response.data);&#10;      } catch (error) {&#10;        console.error('Error fetching personal info:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchPersonalInfo();&#10;  }, []);&#10;&#10;  const handleSubmit = async (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    setIsSubmitting(true);&#10;    setSubmitStatus('idle');&#10;    setErrorMessage('');&#10;&#10;    // Check if EmailJS is properly configured&#10;    if (!EMAILJS_SERVICE_ID || !EMAILJS_TEMPLATE_ID || !EMAILJS_PUBLIC_KEY) {&#10;      console.error('EmailJS configuration missing. Using mailto fallback.');&#10;      setSubmitStatus('error');&#10;      setErrorMessage('Email service not configured. Using direct email fallback.');&#10;      setTimeout(() =&gt; {&#10;        handleMailtoFallback();&#10;      }, 2000);&#10;      setIsSubmitting(false);&#10;      return;&#10;    }&#10;&#10;    if (form.current) {&#10;      try {&#10;        // Get form data and prepare JSON object&#10;        const formData = new FormData(form.current);&#10;        const templateParams = {&#10;          from_name: formData.get('from_name') as string,&#10;          from_email: formData.get('from_email') as string,&#10;          subject: formData.get('subject') as string,&#10;          message: formData.get('message') as string,&#10;          to_email: personalInfo?.email || process.env.REACT_APP_CONTACT_EMAIL || 'alan.kalbermatter.dev@gmail.com',&#10;          reply_to: formData.get('from_email') as string,&#10;        };&#10;&#10;        // Debug: Log what we're about to send&#10;        console.log('=== DEBUGGING EMAILJS REQUEST ===');&#10;        console.log('SERVICE_ID:', EMAILJS_SERVICE_ID);&#10;        console.log('TEMPLATE_ID:', EMAILJS_TEMPLATE_ID);&#10;        console.log('PUBLIC_KEY:', EMAILJS_PUBLIC_KEY);&#10;        console.log('Template params:');&#10;        console.log(JSON.stringify(templateParams, null, 2));&#10;&#10;        const result = await emailjs.send(&#10;          EMAILJS_SERVICE_ID,&#10;          EMAILJS_TEMPLATE_ID,&#10;          templateParams,&#10;          EMAILJS_PUBLIC_KEY&#10;        );&#10;&#10;        console.log('Email sent successfully:', result.text);&#10;        setSubmitStatus('success');&#10;        form.current.reset(); // Reset the form after success&#10;&#10;      } catch (error: any) {&#10;        console.error('Failed to send email:', error);&#10;        setSubmitStatus('error');&#10;        setErrorMessage(error.text || 'EmailJS service failed. Using email client fallback.');&#10;&#10;        // Auto-fallback to mailto after showing error briefly&#10;        setTimeout(() =&gt; {&#10;          handleMailtoFallback();&#10;        }, 2000);&#10;      } finally {&#10;        setIsSubmitting(false);&#10;      }&#10;    }&#10;  };&#10;&#10;  // Alternative: Simple mailto fallback&#10;  const handleMailtoFallback = () =&gt; {&#10;    if (form.current) {&#10;      const formData = new FormData(form.current);&#10;      const name = formData.get('from_name') as string;&#10;      const email = formData.get('from_email') as string;&#10;      const subject = formData.get('subject') as string;&#10;      const message = formData.get('message') as string;&#10;&#10;      const mailtoSubject = encodeURIComponent(subject || 'Portfolio Contact');&#10;      const mailtoBody = encodeURIComponent(&#10;        `Name: ${name}\nEmail: ${email}\n\nMessage:\n${message}`&#10;      );&#10;      const mailtoUrl = `mailto:${personalInfo?.email || 'alan.kalbermatter.dev@gmail.com'}?subject=${mailtoSubject}&amp;body=${mailtoBody}`;&#10;      window.location.href = mailtoUrl;&#10;    }&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;contact&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-48 mx-auto mb-16&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12&quot;&gt;&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                {[...Array(4)].map((_, i) =&gt; (&#10;                  &lt;div key={i} className=&quot;h-12 bg-gray-200 rounded&quot;&gt;&lt;/div&gt;&#10;                ))}&#10;                &lt;div className=&quot;h-32 bg-gray-200 rounded&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                {[...Array(3)].map((_, i) =&gt; (&#10;                  &lt;div key={i} className=&quot;flex items-center space-x-4&quot;&gt;&#10;                    &lt;div className=&quot;w-12 h-12 bg-gray-200 rounded&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;flex-1 space-y-2&quot;&gt;&#10;                      &lt;div className=&quot;h-4 bg-gray-200 rounded w-1/3&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;h-3 bg-gray-200 rounded w-2/3&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section id=&quot;contact&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          whileInView={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          viewport={{ once: true }}&#10;          className=&quot;text-center mb-16&quot;&#10;        &gt;&#10;          &lt;h2 className=&quot;text-4xl md:text-5xl font-bold text-gray-900 mb-4&quot;&gt;&#10;            Get In Touch&#10;          &lt;/h2&gt;&#10;          &lt;div className=&quot;w-20 h-1 bg-blue-600 mx-auto mb-6&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;text-xl text-gray-600 max-w-3xl mx-auto&quot;&gt;&#10;            I'm always interested in new opportunities and collaborations.&#10;            Let's discuss how we can work together!&#10;          &lt;/p&gt;&#10;        &lt;/motion.div&gt;&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12&quot;&gt;&#10;          {/* Contact Form */}&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, x: -20 }}&#10;            whileInView={{ opacity: 1, x: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.2 }}&#10;            viewport={{ once: true }}&#10;          &gt;&#10;            &lt;div className=&quot;bg-gray-50 rounded-2xl p-8&quot;&gt;&#10;              &lt;h3 className=&quot;text-2xl font-bold text-gray-900 mb-6&quot;&gt;Send me a message&lt;/h3&gt;&#10;&#10;              &lt;form ref={form} onSubmit={handleSubmit} className=&quot;space-y-6&quot;&gt;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label htmlFor=&quot;name&quot; className=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;&#10;                      Name *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      id=&quot;name&quot;&#10;                      name=&quot;from_name&quot;&#10;                      required&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-600 focus:border-transparent transition-all duration-200&quot;&#10;                      placeholder=&quot;Your name&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label htmlFor=&quot;email&quot; className=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;&#10;                      Email *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;email&quot;&#10;                      id=&quot;email&quot;&#10;                      name=&quot;from_email&quot;&#10;                      required&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-600 focus:border-transparent transition-all duration-200&quot;&#10;                      placeholder=&quot;alan.kalbermatter.dev@gmail.com&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div&gt;&#10;                  &lt;label htmlFor=&quot;subject&quot; className=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;&#10;                    Subject *&#10;                  &lt;/label&gt;&#10;                  &lt;input&#10;                    type=&quot;text&quot;&#10;                    id=&quot;subject&quot;&#10;                    name=&quot;subject&quot;&#10;                    required&#10;                    className=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-600 focus:border-transparent transition-all duration-200&quot;&#10;                    placeholder=&quot;What's this about?&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div&gt;&#10;                  &lt;label htmlFor=&quot;message&quot; className=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;&#10;                    Message *&#10;                  &lt;/label&gt;&#10;                  &lt;textarea&#10;                    id=&quot;message&quot;&#10;                    name=&quot;message&quot;&#10;                    required&#10;                    rows={5}&#10;                    className=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-600 focus:border-transparent transition-all duration-200 resize-none&quot;&#10;                    placeholder=&quot;Tell me about your project or just say hello!&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;button&#10;                  type=&quot;submit&quot;&#10;                  disabled={isSubmitting}&#10;                  className={`w-full py-3 px-6 rounded-lg font-medium transition-all duration-200 transform hover:scale-105 ${&#10;                    isSubmitting&#10;                      ? 'bg-gray-400 cursor-not-allowed'&#10;                      : 'bg-blue-600 hover:bg-blue-700 text-white shadow-lg'&#10;                  }`}&#10;                &gt;&#10;                  {isSubmitting ? (&#10;                    &lt;div className=&quot;flex items-center justify-center&quot;&gt;&#10;                      &lt;svg className=&quot;animate-spin -ml-1 mr-3 h-5 w-5 text-white&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                        &lt;circle className=&quot;opacity-25&quot; cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;4&quot;&gt;&lt;/circle&gt;&#10;                        &lt;path className=&quot;opacity-75&quot; fill=&quot;currentColor&quot; d=&quot;M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z&quot;&gt;&lt;/path&gt;&#10;                      &lt;/svg&gt;&#10;                      Sending...&#10;                    &lt;/div&gt;&#10;                  ) : (&#10;                    'Send Message'&#10;                  )}&#10;                &lt;/button&gt;&#10;&#10;                {/* Fallback mailto button */}&#10;                &lt;div className=&quot;text-center&quot;&gt;&#10;                  &lt;button&#10;                    type=&quot;button&quot;&#10;                    onClick={handleMailtoFallback}&#10;                    className=&quot;text-blue-600 hover:text-blue-700 text-sm font-medium underline transition-colors&quot;&#10;                  &gt;&#10;                    Or send email directly with your email client&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Status Messages */}&#10;                {submitStatus === 'success' &amp;&amp; (&#10;                  &lt;div className=&quot;p-4 bg-green-100 border border-green-400 text-green-700 rounded-lg&quot;&gt;&#10;                    ✅ Message sent successfully! I'll get back to you soon.&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                {submitStatus === 'error' &amp;&amp; (&#10;                  &lt;div className=&quot;p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg&quot;&gt;&#10;                    ❌ Something went wrong. Please try again or contact me directly.&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                {/* Error Message for EmailJS */}&#10;                {submitStatus === 'error' &amp;&amp; errorMessage &amp;&amp; (&#10;                  &lt;div className=&quot;p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg&quot;&gt;&#10;                    ❌ {errorMessage}&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/form&gt;&#10;            &lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;&#10;          {/* Contact Information */}&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, x: 20 }}&#10;            whileInView={{ opacity: 1, x: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.4 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;space-y-8&quot;&#10;          &gt;&#10;            &lt;div&gt;&#10;              &lt;h3 className=&quot;text-2xl font-bold text-gray-900 mb-6&quot;&gt;Contact Information&lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 mb-8&quot;&gt;&#10;                Feel free to reach out through any of these channels. I typically respond within 24 hours.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;space-y-6&quot;&gt;&#10;              {/* Email */}&#10;              &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                &lt;div className=&quot;flex-shrink-0 w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center&quot;&gt;&#10;                  &lt;EnvelopeIcon className=&quot;w-6 h-6 text-blue-600&quot; /&gt;&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;h4 className=&quot;font-semibold text-gray-900&quot;&gt;Email&lt;/h4&gt;&#10;                  &lt;a&#10;                    href={`mailto:${personalInfo?.email}`}&#10;                    className=&quot;text-gray-600 hover:text-blue-600 transition-colors&quot;&#10;                  &gt;&#10;                    {personalInfo?.email || 'alan.kalbermatter.dev@gmail.com'}&#10;                  &lt;/a&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Phone */}&#10;              {personalInfo?.phone &amp;&amp; (&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;div className=&quot;flex-shrink-0 w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center&quot;&gt;&#10;                    &lt;PhoneIcon className=&quot;w-6 h-6 text-green-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h4 className=&quot;font-semibold text-gray-900&quot;&gt;Phone&lt;/h4&gt;&#10;                    &lt;a&#10;                      href={`tel:${personalInfo.phone}`}&#10;                      className=&quot;text-gray-600 hover:text-green-600 transition-colors&quot;&#10;                    &gt;&#10;                      {personalInfo.phone}&#10;                    &lt;/a&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;&#10;              {/* Location */}&#10;              &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                &lt;div className=&quot;flex-shrink-0 w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center&quot;&gt;&#10;                  &lt;MapPinIcon className=&quot;w-6 h-6 text-purple-600&quot; /&gt;&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;h4 className=&quot;font-semibold text-gray-900&quot;&gt;Location&lt;/h4&gt;&#10;                  &lt;p className=&quot;text-gray-600&quot;&gt;&#10;                    {personalInfo?.location || 'Remote'}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Social Links */}&#10;            &lt;div className=&quot;pt-8 border-t border-gray-200&quot;&gt;&#10;              &lt;h4 className=&quot;font-semibold text-gray-900 mb-4&quot;&gt;Connect with me&lt;/h4&gt;&#10;              &lt;div className=&quot;flex space-x-4&quot;&gt;&#10;                {personalInfo?.githubUrl &amp;&amp; (&#10;                  &lt;a&#10;                    href={personalInfo.githubUrl}&#10;                    target=&quot;_blank&quot;&#10;                    rel=&quot;noopener noreferrer&quot;&#10;                    className=&quot;w-10 h-10 bg-gray-100 rounded-lg flex items-center justify-center text-gray-600 hover:text-gray-900 hover:bg-gray-200 transition-all duration-200&quot;&#10;                  &gt;&#10;                    &lt;svg className=&quot;w-5 h-5&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                      &lt;path d=&quot;M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z&quot;/&gt;&#10;                    &lt;/svg&gt;&#10;                  &lt;/a&gt;&#10;                )}&#10;&#10;                {personalInfo?.linkedinUrl &amp;&amp; (&#10;                  &lt;a&#10;                    href={personalInfo.linkedinUrl}&#10;                    target=&quot;_blank&quot;&#10;                    rel=&quot;noopener noreferrer&quot;&#10;                    className=&quot;w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center text-blue-600 hover:text-blue-700 hover:bg-blue-200 transition-all duration-200&quot;&#10;                  &gt;&#10;                    &lt;svg className=&quot;w-5 h-5&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                      &lt;path d=&quot;M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z&quot;/&gt;&#10;                    &lt;/svg&gt;&#10;                  &lt;/a&gt;&#10;                )}&#10;&#10;                {personalInfo?.twitterUrl &amp;&amp; (&#10;                  &lt;a&#10;                    href={personalInfo.twitterUrl}&#10;                    target=&quot;_blank&quot;&#10;                    rel=&quot;noopener noreferrer&quot;&#10;                    className=&quot;w-10 h-10 bg-sky-100 rounded-lg flex items-center justify-center text-sky-600 hover:text-sky-700 hover:bg-sky-200 transition-all duration-200&quot;&#10;                  &gt;&#10;                    &lt;svg className=&quot;w-5 h-5&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                      &lt;path d=&quot;M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z&quot;/&gt;&#10;                    &lt;/svg&gt;&#10;                  &lt;/a&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default Contact;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/Experience.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/Experience.tsx" />
              <option name="originalContent" value="import React, { useEffect, useState } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { CalendarIcon, ArrowTopRightOnSquareIcon } from '@heroicons/react/24/outline';&#10;import { experiencesApi } from '../services/api';&#10;import { Experience as ExperienceType } from '../types';&#10;&#10;const Experience: React.FC = () =&gt; {&#10;  const [experiences, setExperiences] = useState&lt;ExperienceType[]&gt;([]);&#10;  const [loading, setLoading] = useState(true);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchExperiences = async () =&gt; {&#10;      try {&#10;        const response = await experiencesApi.getAll();&#10;        setExperiences(response.data);&#10;&#10;    fetchExperiences();&#10;  }, []);&#10;&#10;  const formatDate = (dateString: string) =&gt; {&#10;    return new Date(dateString).toLocaleDateString('en-US', {&#10;      month: 'short',&#10;      year: 'numeric'&#10;    });&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;experience&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-48 mx-auto mb-16&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;space-y-8&quot;&gt;&#10;              {[...Array(3)].map((_, i) =&gt; (&#10;                &lt;div key={i} className=&quot;flex gap-6&quot;&gt;&#10;                  &lt;div className=&quot;w-4 h-4 bg-gray-200 rounded-full mt-6&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;flex-1 space-y-4&quot;&gt;&#10;                    &lt;div className=&quot;h-6 bg-gray-200 rounded w-1/3&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 rounded w-1/4&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 rounded w-full&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 rounded w-2/3&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section id=&quot;experience&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          whileInView={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          viewport={{ once: true }}&#10;          className=&quot;text-center mb-16&quot;&#10;        &gt;&#10;          &lt;h2 className=&quot;text-4xl md:text-5xl font-bold text-gray-900 mb-4&quot;&gt;&#10;            Work Experience&#10;          &lt;/h2&gt;&#10;          &lt;div className=&quot;w-20 h-1 bg-blue-600 mx-auto mb-6&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;text-xl text-gray-600 max-w-3xl mx-auto&quot;&gt;&#10;            My professional journey and the experiences that have shaped my career.&#10;          &lt;/p&gt;&#10;        &lt;/motion.div&gt;&#10;&#10;        {experiences.length &gt; 0 ? (&#10;          &lt;div className=&quot;relative&quot;&gt;&#10;            {/* Timeline line */}&#10;            &lt;div className=&quot;absolute left-8 md:left-1/2 transform md:-translate-x-px top-0 bottom-0 w-0.5 bg-gray-200&quot;&gt;&lt;/div&gt;&#10;&#10;            &lt;div className=&quot;space-y-12&quot;&gt;&#10;              {experiences.map((experience, index) =&gt; (&#10;                &lt;motion.div&#10;                  key={experience.id}&#10;                  initial={{ opacity: 0, y: 20 }}&#10;                  whileInView={{ opacity: 1, y: 0 }}&#10;                  transition={{ duration: 0.6, delay: index * 0.1 }}&#10;                  viewport={{ once: true }}&#10;                  className={`relative flex items-center ${&#10;                    index % 2 === 0 ? 'md:flex-row' : 'md:flex-row-reverse'&#10;                  }`}&#10;                &gt;&#10;                  {/* Timeline dot */}&#10;                  &lt;div className=&quot;absolute left-8 md:left-1/2 transform md:-translate-x-1/2 w-4 h-4 bg-blue-600 rounded-full border-4 border-white shadow-lg z-10&quot;&gt;&lt;/div&gt;&#10;&#10;                  {/* Content */}&#10;                  &lt;div className={`w-full md:w-1/2 ${index % 2 === 0 ? 'md:pr-12' : 'md:pl-12'} ml-16 md:ml-0`}&gt;&#10;                    &lt;div className=&quot;bg-white p-6 rounded-xl shadow-lg border border-gray-100 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                      {/* Header */}&#10;                      &lt;div className=&quot;flex items-start justify-between mb-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;h3 className=&quot;text-xl font-bold text-gray-900 mb-1&quot;&gt;&#10;                            {experience.position}&#10;                          &lt;/h3&gt;&#10;                          &lt;div className=&quot;flex items-center gap-2 mb-2&quot;&gt;&#10;                            {experience.companyUrl ? (&#10;                              &lt;a&#10;                                href={experience.companyUrl}&#10;                                target=&quot;_blank&quot;&#10;                                rel=&quot;noopener noreferrer&quot;&#10;                                className=&quot;text-blue-600 hover:text-blue-700 font-medium flex items-center gap-1&quot;&#10;                              &gt;&#10;                                {experience.company}&#10;                                &lt;ArrowTopRightOnSquareIcon className=&quot;w-4 h-4&quot; /&gt;&#10;                              &lt;/a&gt;&#10;                            ) : (&#10;                              &lt;span className=&quot;text-blue-600 font-medium&quot;&gt;&#10;                                {experience.company}&#10;                              &lt;/span&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {experience.isCurrent &amp;&amp; (&#10;                          &lt;span className=&quot;bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                            Current&#10;                          &lt;/span&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Date */}&#10;                      &lt;div className=&quot;flex items-center text-gray-600 mb-4&quot;&gt;&#10;                        &lt;CalendarIcon className=&quot;w-4 h-4 mr-2&quot; /&gt;&#10;                        &lt;span className=&quot;text-sm&quot;&gt;&#10;                          {formatDate(experience.startDate)} - {' '}&#10;                          {experience.endDate ? formatDate(experience.endDate) : 'Present'}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Description */}&#10;                      &lt;p className=&quot;text-gray-700 mb-4 leading-relaxed&quot;&gt;&#10;                        {experience.description}&#10;                      &lt;/p&gt;&#10;&#10;                      {/* Responsibilities */}&#10;                      {experience.responsibilities &amp;&amp; experience.responsibilities.length &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;mb-4&quot;&gt;&#10;                          &lt;h4 className=&quot;font-semibold text-gray-900 mb-2&quot;&gt;Key Responsibilities:&lt;/h4&gt;&#10;                          &lt;ul className=&quot;list-disc list-inside space-y-1 text-gray-700 text-sm&quot;&gt;&#10;                            {experience.responsibilities.map((responsibility, idx) =&gt; (&#10;                              &lt;li key={idx}&gt;{responsibility}&lt;/li&gt;&#10;                            ))}&#10;                          &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Technologies */}&#10;                      {experience.technologies &amp;&amp; experience.technologies.length &gt; 0 &amp;&amp; (&#10;                        &lt;div&gt;&#10;                          &lt;h4 className=&quot;font-semibold text-gray-900 mb-2&quot;&gt;Technologies Used:&lt;/h4&gt;&#10;                          &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;                            {experience.technologies.map((tech) =&gt; (&#10;                              &lt;span&#10;                                key={tech}&#10;                                className=&quot;px-2 py-1 bg-blue-100 text-blue-800 rounded-md text-xs font-medium&quot;&#10;                              &gt;&#10;                                {tech}&#10;                              &lt;/span&gt;&#10;                            ))}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/motion.div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        ) : (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0 }}&#10;            whileInView={{ opacity: 1 }}&#10;            transition={{ duration: 0.8 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;text-center py-12&quot;&#10;          &gt;&#10;            &lt;CalendarIcon className=&quot;w-16 h-16 text-gray-400 mx-auto mb-4&quot; /&gt;&#10;            &lt;h3 className=&quot;text-xl font-medium text-gray-900 mb-2&quot;&gt;No Experience Found&lt;/h3&gt;&#10;            &lt;p className=&quot;text-gray-600&quot;&gt;&#10;              Work experience will appear here once added to your portfolio.&#10;            &lt;/p&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default Experience;&#10;" />
              <option name="updatedContent" value="import React, { useEffect, useState } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { CalendarIcon, ArrowTopRightOnSquareIcon } from '@heroicons/react/24/outline';&#10;import { experienceApi } from '../services/api';&#10;import { Experience as ExperienceType } from '../types';&#10;&#10;const Experience: React.FC = () =&gt; {&#10;  const [experiences, setExperiences] = useState&lt;ExperienceType[]&gt;([]);&#10;  const [loading, setLoading] = useState(true);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchExperiences = async () =&gt; {&#10;      try {&#10;        const response = await experienceApi.getAll();&#10;        // Sort by start date, current positions first&#10;        const sortedExperiences = response.data.sort((a, b) =&gt; {&#10;          if (a.isCurrent &amp;&amp; !b.isCurrent) return -1;&#10;          if (!a.isCurrent &amp;&amp; b.isCurrent) return 1;&#10;          return new Date(b.startDate).getTime() - new Date(a.startDate).getTime();&#10;        });&#10;        setExperiences(sortedExperiences);&#10;      } catch (error) {&#10;        console.error('Error fetching experiences:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchExperiences();&#10;  }, []);&#10;&#10;  const formatDate = (dateString: string) =&gt; {&#10;    return new Date(dateString).toLocaleDateString('en-US', {&#10;      month: 'short',&#10;      year: 'numeric'&#10;    });&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;experience&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-48 mx-auto mb-16&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;space-y-8&quot;&gt;&#10;              {[...Array(3)].map((_, i) =&gt; (&#10;                &lt;div key={i} className=&quot;flex gap-6&quot;&gt;&#10;                  &lt;div className=&quot;w-4 h-4 bg-gray-200 rounded-full mt-6&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;flex-1 space-y-4&quot;&gt;&#10;                    &lt;div className=&quot;h-6 bg-gray-200 rounded w-1/3&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 rounded w-1/4&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 rounded w-full&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 rounded w-2/3&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section id=&quot;experience&quot; className=&quot;py-20 bg-white&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          whileInView={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          viewport={{ once: true }}&#10;          className=&quot;text-center mb-16&quot;&#10;        &gt;&#10;          &lt;h2 className=&quot;text-4xl md:text-5xl font-bold text-gray-900 mb-4&quot;&gt;&#10;            Work Experience&#10;          &lt;/h2&gt;&#10;          &lt;div className=&quot;w-20 h-1 bg-blue-600 mx-auto mb-6&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;text-xl text-gray-600 max-w-3xl mx-auto&quot;&gt;&#10;            My professional journey and the experiences that have shaped my career.&#10;          &lt;/p&gt;&#10;        &lt;/motion.div&gt;&#10;&#10;        {experiences.length &gt; 0 ? (&#10;          &lt;div className=&quot;relative&quot;&gt;&#10;            {/* Timeline line */}&#10;            &lt;div className=&quot;absolute left-8 md:left-1/2 transform md:-translate-x-px top-0 bottom-0 w-0.5 bg-gray-200&quot;&gt;&lt;/div&gt;&#10;&#10;            &lt;div className=&quot;space-y-12&quot;&gt;&#10;              {experiences.map((experience, index) =&gt; (&#10;                &lt;motion.div&#10;                  key={experience.id}&#10;                  initial={{ opacity: 0, y: 20 }}&#10;                  whileInView={{ opacity: 1, y: 0 }}&#10;                  transition={{ duration: 0.6, delay: index * 0.1 }}&#10;                  viewport={{ once: true }}&#10;                  className={`relative flex items-center ${&#10;                    index % 2 === 0 ? 'md:flex-row' : 'md:flex-row-reverse'&#10;                  }`}&#10;                &gt;&#10;                  {/* Timeline dot */}&#10;                  &lt;div className=&quot;absolute left-8 md:left-1/2 transform md:-translate-x-1/2 w-4 h-4 bg-blue-600 rounded-full border-4 border-white shadow-lg z-10&quot;&gt;&lt;/div&gt;&#10;&#10;                  {/* Content */}&#10;                  &lt;div className={`w-full md:w-1/2 ${index % 2 === 0 ? 'md:pr-12' : 'md:pl-12'} ml-16 md:ml-0`}&gt;&#10;                    &lt;div className=&quot;bg-white p-6 rounded-xl shadow-lg border border-gray-100 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                      {/* Header */}&#10;                      &lt;div className=&quot;flex items-start justify-between mb-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;h3 className=&quot;text-xl font-bold text-gray-900 mb-1&quot;&gt;&#10;                            {experience.position}&#10;                          &lt;/h3&gt;&#10;                          &lt;div className=&quot;flex items-center gap-2 mb-2&quot;&gt;&#10;                            {experience.companyUrl ? (&#10;                              &lt;a&#10;                                href={experience.companyUrl}&#10;                                target=&quot;_blank&quot;&#10;                                rel=&quot;noopener noreferrer&quot;&#10;                                className=&quot;text-blue-600 hover:text-blue-700 font-medium flex items-center gap-1&quot;&#10;                              &gt;&#10;                                {experience.company}&#10;                                &lt;ArrowTopRightOnSquareIcon className=&quot;w-4 h-4&quot; /&gt;&#10;                              &lt;/a&gt;&#10;                            ) : (&#10;                              &lt;span className=&quot;text-blue-600 font-medium&quot;&gt;&#10;                                {experience.company}&#10;                              &lt;/span&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {experience.isCurrent &amp;&amp; (&#10;                          &lt;span className=&quot;bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                            Current&#10;                          &lt;/span&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Date */}&#10;                      &lt;div className=&quot;flex items-center text-gray-600 mb-4&quot;&gt;&#10;                        &lt;CalendarIcon className=&quot;w-4 h-4 mr-2&quot; /&gt;&#10;                        &lt;span className=&quot;text-sm&quot;&gt;&#10;                          {formatDate(experience.startDate)} - {' '}&#10;                          {experience.endDate ? formatDate(experience.endDate) : 'Present'}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Description */}&#10;                      &lt;p className=&quot;text-gray-700 mb-4 leading-relaxed&quot;&gt;&#10;                        {experience.description}&#10;                      &lt;/p&gt;&#10;&#10;                      {/* Responsibilities */}&#10;                      {experience.responsibilities &amp;&amp; experience.responsibilities.length &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;mb-4&quot;&gt;&#10;                          &lt;h4 className=&quot;font-semibold text-gray-900 mb-2&quot;&gt;Key Responsibilities:&lt;/h4&gt;&#10;                          &lt;ul className=&quot;list-disc list-inside space-y-1 text-gray-700 text-sm&quot;&gt;&#10;                            {experience.responsibilities.map((responsibility, idx) =&gt; (&#10;                              &lt;li key={idx}&gt;{responsibility}&lt;/li&gt;&#10;                            ))}&#10;                          &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Technologies */}&#10;                      {experience.technologies &amp;&amp; experience.technologies.length &gt; 0 &amp;&amp; (&#10;                        &lt;div&gt;&#10;                          &lt;h4 className=&quot;font-semibold text-gray-900 mb-2&quot;&gt;Technologies Used:&lt;/h4&gt;&#10;                          &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;                            {experience.technologies.map((tech) =&gt; (&#10;                              &lt;span&#10;                                key={tech}&#10;                                className=&quot;px-2 py-1 bg-blue-100 text-blue-800 rounded-md text-xs font-medium&quot;&#10;                              &gt;&#10;                                {tech}&#10;                              &lt;/span&gt;&#10;                            ))}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/motion.div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        ) : (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0 }}&#10;            whileInView={{ opacity: 1 }}&#10;            transition={{ duration: 0.8 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;text-center py-12&quot;&#10;          &gt;&#10;            &lt;CalendarIcon className=&quot;w-16 h-16 text-gray-400 mx-auto mb-4&quot; /&gt;&#10;            &lt;h3 className=&quot;text-xl font-medium text-gray-900 mb-2&quot;&gt;No Experience Found&lt;/h3&gt;&#10;            &lt;p className=&quot;text-gray-600&quot;&gt;&#10;              Work experience will appear here once added to your portfolio.&#10;            &lt;/p&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default Experience;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/Hero.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/Hero.tsx" />
              <option name="originalContent" value="import React, { useEffect, useState } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { ChevronDownIcon } from '@heroicons/react/24/outline';&#10;import { personalInfoApi } from '../services/api';&#10;import { PersonalInfo } from '../types';&#10;&#10;const Hero: React.FC = () =&gt; {&#10;  const [personalInfo, setPersonalInfo] = useState&lt;PersonalInfo | null&gt;(null);&#10;  const [loading, setLoading] = useState(true);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchPersonalInfo = async () =&gt; {&#10;      try {&#10;        const response = await personalInfoApi.get();&#10;        setPersonalInfo(response.data);&#10;      } catch (error) {&#10;        console.error('Error fetching personal info:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchPersonalInfo();&#10;  }, []);&#10;&#10;  const scrollToAbout = () =&gt; {&#10;    const element = document.getElementById('about');&#10;    if (element) {&#10;      element.scrollIntoView({ behavior: 'smooth' });&#10;    }&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;hero&quot; className=&quot;min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-white&quot;&gt;&#10;        &lt;div className=&quot;animate-pulse&quot;&gt;&#10;          &lt;div className=&quot;h-32 w-32 bg-gray-200 rounded-full mx-auto mb-4&quot;&gt;&lt;/div&gt;&#10;          &lt;div className=&quot;h-8 bg-gray-200 rounded w-64 mx-auto mb-2&quot;&gt;&lt;/div&gt;&#10;          &lt;div className=&quot;h-6 bg-gray-200 rounded w-48 mx-auto&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section&#10;      id=&quot;hero&quot;&#10;      className=&quot;min-h-screen flex items-center justify-center pt-16 relative&quot;&#10;      style={{&#10;        backgroundImage: 'url(/moutnainWallpaper.jpeg)',&#10;        backgroundSize: 'cover',&#10;        backgroundPosition: 'center',&#10;        backgroundRepeat: 'no-repeat'&#10;      }}&#10;    &gt;&#10;      {/* Dark overlay for better text readability */}&#10;      &lt;div className=&quot;absolute inset-0 bg-black bg-opacity-50&quot;&gt;&lt;/div&gt;&#10;&#10;      {/* Content */}&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center relative z-10&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          animate={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          className=&quot;space-y-8&quot;&#10;        &gt;&#10;          {/* Profile Image */}&#10;          {personalInfo?.profileImageUrl &amp;&amp; (&#10;            &lt;motion.div&#10;              initial={{ opacity: 0, scale: 0.8 }}&#10;              animate={{ opacity: 1, scale: 1 }}&#10;              transition={{ duration: 0.8, delay: 0.2 }}&#10;              className=&quot;flex justify-center&quot;&#10;            &gt;&#10;              &lt;img&#10;                src={personalInfo.profileImageUrl}&#10;                alt={personalInfo.name}&#10;                className=&quot;w-32 h-32 rounded-full object-cover shadow-xl ring-4 ring-white&quot;&#10;              /&gt;&#10;            &lt;/motion.div&gt;&#10;          )}&#10;&#10;          {/* Name */}&#10;          &lt;motion.h1&#10;            initial={{ opacity: 0, y: 20 }}&#10;            animate={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.3 }}&#10;            className=&quot;text-5xl md:text-7xl font-bold text-white&quot;&#10;          &gt;&#10;            {personalInfo?.name || 'Alan Kalbermatter'}&#10;          &lt;/motion.h1&gt;&#10;&#10;          {/* Job Title */}&#10;          &lt;motion.h2&#10;            initial={{ opacity: 0, y: 20 }}&#10;            animate={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.4 }}&#10;            className=&quot;text-xl md:text-2xl text-blue-400 font-medium&quot;&#10;          &gt;&#10;            {personalInfo?.jobTitle || 'System Engineer - SWE Backend'}&#10;          &lt;/motion.h2&gt;&#10;&#10;          {/* Bio */}&#10;          &lt;motion.p&#10;            initial={{ opacity: 0, y: 20 }}&#10;            animate={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.5 }}&#10;            className=&quot;text-lg md:text-xl text-gray-200 max-w-3xl mx-auto leading-relaxed&quot;&#10;          &gt;&#10;            {personalInfo?.bio || 'Building innovative solutions with modern technologies'}&#10;          &lt;/motion.p&gt;&#10;&#10;          {/* CTA Buttons */}&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, y: 20 }}&#10;            animate={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.6 }}&#10;            className=&quot;flex flex-col sm:flex-row items-center justify-center gap-4 pt-8&quot;&#10;          &gt;&#10;            &lt;button&#10;              onClick={scrollToAbout}&#10;              className=&quot;px-8 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-all duration-200 transform hover:scale-105 shadow-lg&quot;&#10;            &gt;&#10;              Learn More&#10;            &lt;/button&gt;&#10;&#10;            {personalInfo?.resumeUrl &amp;&amp; (&#10;              &lt;a&#10;                href={personalInfo.resumeUrl}&#10;                target=&quot;_blank&quot;&#10;                rel=&quot;noopener noreferrer&quot;&#10;                className=&quot;px-8 py-3 border-2 border-white text-white rounded-lg font-medium hover:border-blue-400 hover:text-blue-400 transition-all duration-200 transform hover:scale-105&quot;&#10;              &gt;&#10;                Download Resume&#10;              &lt;/a&gt;&#10;            )}&#10;          &lt;/motion.div&gt;&#10;&#10;          {/* Social Links */}&#10;          {(personalInfo?.githubUrl || personalInfo?.linkedinUrl || personalInfo?.twitterUrl) &amp;&amp; (&#10;            &lt;motion.div&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ duration: 0.8, delay: 0.7 }}&#10;              className=&quot;flex items-center justify-center gap-6 pt-8&quot;&#10;            &gt;&#10;              {personalInfo.githubUrl &amp;&amp; (&#10;                &lt;a&#10;                  href={personalInfo.githubUrl}&#10;                  target=&quot;_blank&quot;&#10;                  rel=&quot;noopener noreferrer&quot;&#10;                  className=&quot;text-gray-300 hover:text-blue-400 transition-colors duration-200&quot;&#10;                &gt;&#10;                  &lt;svg className=&quot;w-6 h-6&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                    &lt;path d=&quot;M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z&quot;/&gt;&#10;                  &lt;/svg&gt;&#10;                &lt;/a&gt;&#10;              )}&#10;&#10;              {personalInfo.linkedinUrl &amp;&amp; (&#10;                &lt;a&#10;                  href={personalInfo.linkedinUrl}&#10;                  target=&quot;_blank&quot;&#10;                  rel=&quot;noopener noreferrer&quot;&#10;                  className=&quot;text-gray-300 hover:text-blue-400 transition-colors duration-200&quot;&#10;                &gt;&#10;                  &lt;svg className=&quot;w-6 h-6&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                    &lt;path d=&quot;M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z&quot;/&gt;&#10;                  &lt;/svg&gt;&#10;                &lt;/a&gt;&#10;              )}&#10;&#10;              {personalInfo.twitterUrl &amp;&amp; (&#10;                &lt;a&#10;                  href={personalInfo.twitterUrl}&#10;                  target=&quot;_blank&quot;&#10;                  rel=&quot;noopener noreferrer&quot;&#10;                  className=&quot;text-gray-300 hover:text-blue-400 transition-colors duration-200&quot;&#10;                &gt;&#10;                  &lt;svg className=&quot;w-6 h-6&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                    &lt;path d=&quot;M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z&quot;/&gt;&#10;                  &lt;/svg&gt;&#10;                &lt;/a&gt;&#10;              )}&#10;            &lt;/motion.div&gt;&#10;          )}&#10;        &lt;/motion.div&gt;&#10;&#10;        {/* Scroll indicator */}&#10;        &lt;motion.div&#10;          initial={{ opacity: 0 }}&#10;          animate={{ opacity: 1 }}&#10;          transition={{ duration: 1, delay: 1 }}&#10;          className=&quot;absolute bottom-8 left-1/2 transform -translate-x-1/2&quot;&#10;        &gt;&#10;          &lt;button&#10;            onClick={scrollToAbout}&#10;            className=&quot;text-gray-400 hover:text-blue-600 transition-colors duration-200 animate-bounce&quot;&#10;          &gt;&#10;            &lt;ChevronDownIcon className=&quot;w-6 h-6&quot; /&gt;&#10;          &lt;/button&gt;&#10;        &lt;/motion.div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default Hero;&#10;" />
              <option name="updatedContent" value="import React, { useEffect, useState } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { ChevronDownIcon } from '@heroicons/react/24/outline';&#10;import { personalInfoApi } from '../services/api';&#10;import { PersonalInfo } from '../types';&#10;&#10;const Hero: React.FC = () =&gt; {&#10;  const [personalInfo, setPersonalInfo] = useState&lt;PersonalInfo | null&gt;(null);&#10;  const [loading, setLoading] = useState(true);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchPersonalInfo = async () =&gt; {&#10;      try {&#10;        const response = await personalInfoApi.get();&#10;        setPersonalInfo(response.data);&#10;      } catch (error) {&#10;        console.error('Error fetching personal info:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchPersonalInfo();&#10;  }, []);&#10;&#10;  const scrollToAbout = () =&gt; {&#10;    const element = document.getElementById('about');&#10;    if (element) {&#10;      element.scrollIntoView({ behavior: 'smooth' });&#10;    }&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;hero&quot; className=&quot;min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-white&quot;&gt;&#10;        &lt;div className=&quot;animate-pulse&quot;&gt;&#10;          &lt;div className=&quot;h-32 w-32 bg-gray-200 rounded-full mx-auto mb-4&quot;&gt;&lt;/div&gt;&#10;          &lt;div className=&quot;h-8 bg-gray-200 rounded w-64 mx-auto mb-2&quot;&gt;&lt;/div&gt;&#10;          &lt;div className=&quot;h-6 bg-gray-200 rounded w-48 mx-auto&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section&#10;      id=&quot;hero&quot;&#10;      className=&quot;min-h-screen flex items-center justify-center pt-16 relative&quot;&#10;      style={{&#10;        backgroundImage: 'url(/mountainWallpaper.jpeg)',&#10;        backgroundSize: 'cover',&#10;        backgroundPosition: 'center',&#10;        backgroundRepeat: 'no-repeat'&#10;      }}&#10;    &gt;&#10;      {/* Dark overlay for better text readability */}&#10;      &lt;div className=&quot;absolute inset-0 bg-black bg-opacity-50&quot;&gt;&lt;/div&gt;&#10;&#10;      {/* Content */}&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center relative z-10&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          animate={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          className=&quot;space-y-8&quot;&#10;        &gt;&#10;          {/* Profile Image */}&#10;          {personalInfo?.profileImageUrl &amp;&amp; (&#10;            &lt;motion.div&#10;              initial={{ opacity: 0, scale: 0.8 }}&#10;              animate={{ opacity: 1, scale: 1 }}&#10;              transition={{ duration: 0.8, delay: 0.2 }}&#10;              className=&quot;mb-8&quot;&#10;            &gt;&#10;              &lt;img&#10;                src={personalInfo.profileImageUrl}&#10;                alt={personalInfo.fullName}&#10;                className=&quot;w-32 h-32 rounded-full object-cover shadow-xl ring-4 ring-white&quot;&#10;              /&gt;&#10;            &lt;/motion.div&gt;&#10;          )}&#10;&#10;          {/* Name */}&#10;          &lt;motion.h1&#10;            initial={{ opacity: 0, y: 20 }}&#10;            animate={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.3 }}&#10;            className=&quot;text-5xl md:text-7xl font-bold text-white&quot;&#10;          &gt;&#10;            {personalInfo?.fullName || 'Alan Kalbermatter'}&#10;          &lt;/motion.h1&gt;&#10;&#10;          {/* Job Title */}&#10;          &lt;motion.h2&#10;            initial={{ opacity: 0, y: 20 }}&#10;            animate={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.4 }}&#10;            className=&quot;text-xl md:text-2xl text-blue-400 font-medium&quot;&#10;          &gt;&#10;            {personalInfo?.title || 'System Engineer - SWE Backend'}&#10;          &lt;/motion.h2&gt;&#10;&#10;          {/* Bio */}&#10;          &lt;motion.p&#10;            initial={{ opacity: 0, y: 20 }}&#10;            animate={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.5 }}&#10;            className=&quot;text-lg md:text-xl text-gray-200 max-w-3xl mx-auto leading-relaxed&quot;&#10;          &gt;&#10;            {personalInfo?.summary || 'Building innovative solutions with modern technologies'}&#10;          &lt;/motion.p&gt;&#10;&#10;          {/* CTA Buttons */}&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, y: 20 }}&#10;            animate={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.6 }}&#10;            className=&quot;flex flex-col sm:flex-row items-center justify-center gap-4 pt-8&quot;&#10;          &gt;&#10;            &lt;button&#10;              onClick={scrollToAbout}&#10;              className=&quot;px-8 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-all duration-200 transform hover:scale-105 shadow-lg&quot;&#10;            &gt;&#10;              Learn More&#10;            &lt;/button&gt;&#10;&#10;            {personalInfo?.resumeUrl &amp;&amp; (&#10;              &lt;a&#10;                href={personalInfo.resumeUrl}&#10;                target=&quot;_blank&quot;&#10;                rel=&quot;noopener noreferrer&quot;&#10;                className=&quot;px-8 py-3 border-2 border-white text-white rounded-lg font-medium hover:border-blue-400 hover:text-blue-400 transition-all duration-200 transform hover:scale-105&quot;&#10;              &gt;&#10;                Download Resume&#10;              &lt;/a&gt;&#10;            )}&#10;          &lt;/motion.div&gt;&#10;&#10;          {/* Social Links */}&#10;          {(personalInfo?.githubUrl || personalInfo?.linkedinUrl || personalInfo?.twitterUrl) &amp;&amp; (&#10;            &lt;motion.div&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ duration: 0.8, delay: 0.7 }}&#10;              className=&quot;flex items-center justify-center gap-6 pt-8&quot;&#10;            &gt;&#10;              {personalInfo.githubUrl &amp;&amp; (&#10;                &lt;a&#10;                  href={personalInfo.githubUrl}&#10;                  target=&quot;_blank&quot;&#10;                  rel=&quot;noopener noreferrer&quot;&#10;                  className=&quot;text-gray-300 hover:text-blue-400 transition-colors duration-200&quot;&#10;                &gt;&#10;                  &lt;svg className=&quot;w-6 h-6&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                    &lt;path d=&quot;M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z&quot;/&gt;&#10;                  &lt;/svg&gt;&#10;                &lt;/a&gt;&#10;              )}&#10;&#10;              {personalInfo.linkedinUrl &amp;&amp; (&#10;                &lt;a&#10;                  href={personalInfo.linkedinUrl}&#10;                  target=&quot;_blank&quot;&#10;                  rel=&quot;noopener noreferrer&quot;&#10;                  className=&quot;text-gray-300 hover:text-blue-400 transition-colors duration-200&quot;&#10;                &gt;&#10;                  &lt;svg className=&quot;w-6 h-6&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                    &lt;path d=&quot;M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z&quot;/&gt;&#10;                  &lt;/svg&gt;&#10;                &lt;/a&gt;&#10;              )}&#10;&#10;              {personalInfo.twitterUrl &amp;&amp; (&#10;                &lt;a&#10;                  href={personalInfo.twitterUrl}&#10;                  target=&quot;_blank&quot;&#10;                  rel=&quot;noopener noreferrer&quot;&#10;                  className=&quot;text-gray-300 hover:text-blue-400 transition-colors duration-200&quot;&#10;                &gt;&#10;                  &lt;svg className=&quot;w-6 h-6&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                    &lt;path d=&quot;M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z&quot;/&gt;&#10;                  &lt;/svg&gt;&#10;                &lt;/a&gt;&#10;              )}&#10;            &lt;/motion.div&gt;&#10;          )}&#10;        &lt;/motion.div&gt;&#10;&#10;        {/* Scroll indicator */}&#10;        &lt;motion.div&#10;          initial={{ opacity: 0 }}&#10;          animate={{ opacity: 1 }}&#10;          transition={{ duration: 1, delay: 1 }}&#10;          className=&quot;absolute bottom-8 left-1/2 transform -translate-x-1/2&quot;&#10;        &gt;&#10;          &lt;button&#10;            onClick={scrollToAbout}&#10;            className=&quot;text-gray-400 hover:text-blue-600 transition-colors duration-200 animate-bounce&quot;&#10;          &gt;&#10;            &lt;ChevronDownIcon className=&quot;w-6 h-6&quot; /&gt;&#10;          &lt;/button&gt;&#10;        &lt;/motion.div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default Hero;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/Projects.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/Projects.tsx" />
              <option name="originalContent" value="import React, { useEffect, useState } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { ArrowTopRightOnSquareIcon, CodeBracketIcon } from '@heroicons/react/24/outline';&#10;import { projectsApi } from '../services/api';&#10;import { Project } from '../types';&#10;&#10;const Projects: React.FC = () =&gt; {&#10;  const [projects, setProjects] = useState&lt;Project[]&gt;([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [showAll, setShowAll] = useState(false);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchProjects = async () =&gt; {&#10;      try {&#10;        const response = await projectsApi.getFeatured();&#10;        setProjects(response.data);&#10;        // Fallback to all projects if featured fails&#10;        try {&#10;        // Fallback to all projects if featured fails&#10;        try {&#10;          const allResponse = await projectsApi.getAll();&#10;          setProjects(allResponse.data.slice(0, 6)); // Show first 6&#10;        } catch (err) {&#10;          console.error('Error fetching all projects:', err);&#10;        }&#10;          const allResponse = await projectsApi.getAll();&#10;          setProjects(allResponse.data.slice(0, 6)); // Show first 6&#10;        } catch (err) {&#10;          console.error('Error fetching all projects:', err);&#10;        }&#10;          const allResponse = await projectsApi.getAll();&#10;          setProjects(allResponse.data.slice(0, 6)); // Show first 6&#10;        } catch (err) {&#10;          console.error('Error fetching all projects:', err);&#10;        }&#10;          const allResponse = await projectsApi.getAll();&#10;          setProjects(allResponse.data.slice(0, 6)); // Show first 6&#10;        } catch (err) {&#10;          console.error('Error fetching all projects:', err);&#10;        }&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchProjects();&#10;  }, []);&#10;&#10;  const displayedProjects = showAll ? projects : projects.slice(0, 6);&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;projects&quot; className=&quot;py-20 bg-gray-50&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-48 mx-auto mb-16&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8&quot;&gt;&#10;              {[...Array(6)].map((_, i) =&gt; (&#10;                &lt;div key={i} className=&quot;bg-white rounded-lg p-6 space-y-4&quot;&gt;&#10;                  &lt;div className=&quot;h-48 bg-gray-200 rounded&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-6 bg-gray-200 rounded w-3/4&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-4 bg-gray-200 rounded w-full&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-4 bg-gray-200 rounded w-2/3&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section id=&quot;projects&quot; className=&quot;py-20 bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          whileInView={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          viewport={{ once: true }}&#10;          className=&quot;text-center mb-16&quot;&#10;        &gt;&#10;          &lt;h2 className=&quot;text-4xl md:text-5xl font-bold text-gray-900 mb-4&quot;&gt;&#10;            Featured Projects&#10;          &lt;/h2&gt;&#10;          &lt;div className=&quot;w-20 h-1 bg-blue-600 mx-auto mb-6&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;text-xl text-gray-600 max-w-3xl mx-auto&quot;&gt;&#10;            Here are some of the projects I've worked on that showcase my skills and passion for development.&#10;          &lt;/p&gt;&#10;        &lt;/motion.div&gt;&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12&quot;&gt;&#10;          {displayedProjects.map((project, index) =&gt; (&#10;            &lt;motion.div&#10;              key={project.id}&#10;              initial={{ opacity: 0, y: 20 }}&#10;              whileInView={{ opacity: 1, y: 0 }}&#10;              transition={{ duration: 0.6, delay: index * 0.1 }}&#10;              viewport={{ once: true }}&#10;              className=&quot;bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2&quot;&#10;            &gt;&#10;              {/* Project Image */}&#10;              &lt;div className=&quot;relative h-48 bg-gradient-to-br from-blue-100 to-purple-100 overflow-hidden&quot;&gt;&#10;                {project.imageUrl ? (&#10;                  &lt;img&#10;                    src={project.imageUrl}&#10;                    alt={project.title}&#10;                    className=&quot;w-full h-full object-cover&quot;&#10;                  /&gt;&#10;                ) : (&#10;                  &lt;div className=&quot;w-full h-full flex items-center justify-center&quot;&gt;&#10;                    &lt;CodeBracketIcon className=&quot;w-16 h-16 text-blue-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                {/* Featured badge */}&#10;                {project.isFeatured &amp;&amp; (&#10;                  &lt;div className=&quot;absolute top-4 right-4&quot;&gt;&#10;                    &lt;span className=&quot;bg-blue-600 text-white px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                      Featured&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;&#10;              {/* Project Content */}&#10;              &lt;div className=&quot;p-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-gray-900 mb-2&quot;&gt;&#10;                  {project.title}&#10;                &lt;/h3&gt;&#10;&#10;                &lt;p className=&quot;text-gray-600 mb-4 line-clamp-3&quot;&gt;&#10;                  {project.shortDescription || project.description}&#10;                &lt;/p&gt;&#10;&#10;                {/* Technologies */}&#10;                &lt;div className=&quot;flex flex-wrap gap-2 mb-4&quot;&gt;&#10;                  {project.technologies.slice(0, 3).map((tech) =&gt; (&#10;                    &lt;span&#10;                      key={tech}&#10;                      className=&quot;px-2 py-1 bg-blue-100 text-blue-800 rounded-md text-xs font-medium&quot;&#10;                    &gt;&#10;                      {tech}&#10;                    &lt;/span&gt;&#10;                  ))}&#10;                  {project.technologies.length &gt; 3 &amp;&amp; (&#10;                    &lt;span className=&quot;px-2 py-1 bg-gray-100 text-gray-600 rounded-md text-xs font-medium&quot;&gt;&#10;                      +{project.technologies.length - 3} more&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;&#10;                {/* Project Links */}&#10;                &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                  &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                    {project.githubUrl &amp;&amp; (&#10;                      &lt;a&#10;                        href={project.githubUrl}&#10;                        target=&quot;_blank&quot;&#10;                        rel=&quot;noopener noreferrer&quot;&#10;                        className=&quot;text-gray-600 hover:text-blue-600 transition-colors&quot;&#10;                        title=&quot;View Source Code&quot;&#10;                      &gt;&#10;                        &lt;svg className=&quot;w-5 h-5&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                          &lt;path d=&quot;M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                      &lt;/a&gt;&#10;                    )}&#10;&#10;                    {project.liveUrl &amp;&amp; (&#10;                      &lt;a&#10;                        href={project.liveUrl}&#10;                        target=&quot;_blank&quot;&#10;                        rel=&quot;noopener noreferrer&quot;&#10;                        className=&quot;text-gray-600 hover:text-blue-600 transition-colors&quot;&#10;                        title=&quot;View Live Project&quot;&#10;                      &gt;&#10;                        &lt;ArrowTopRightOnSquareIcon className=&quot;w-5 h-5&quot; /&gt;&#10;                      &lt;/a&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;span className=&quot;text-sm text-gray-500&quot;&gt;&#10;                    {new Date(project.startDate).getFullYear()}&#10;                  &lt;/span&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/motion.div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;&#10;        {/* Show More Button */}&#10;        {projects.length &gt; 6 &amp;&amp; (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0 }}&#10;            whileInView={{ opacity: 1 }}&#10;            transition={{ duration: 0.8 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;text-center&quot;&#10;          &gt;&#10;            &lt;button&#10;              onClick={() =&gt; setShowAll(!showAll)}&#10;              className=&quot;px-8 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-all duration-200 transform hover:scale-105&quot;&#10;            &gt;&#10;              {showAll ? 'Show Less' : `Show All Projects (${projects.length})`}&#10;            &lt;/button&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;&#10;        {/* Empty State */}&#10;        {projects.length === 0 &amp;&amp; !loading &amp;&amp; (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0 }}&#10;            whileInView={{ opacity: 1 }}&#10;            transition={{ duration: 0.8 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;text-center py-12&quot;&#10;          &gt;&#10;            &lt;CodeBracketIcon className=&quot;w-16 h-16 text-gray-400 mx-auto mb-4&quot; /&gt;&#10;            &lt;h3 className=&quot;text-xl font-medium text-gray-900 mb-2&quot;&gt;No Projects Found&lt;/h3&gt;&#10;            &lt;p className=&quot;text-gray-600&quot;&gt;&#10;              Projects will appear here once they're added to your portfolio.&#10;            &lt;/p&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default Projects;&#10;" />
              <option name="updatedContent" value="import React, { useEffect, useState } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { ArrowTopRightOnSquareIcon, CodeBracketIcon } from '@heroicons/react/24/outline';&#10;import { projectsApi } from '../services/api';&#10;import { Project } from '../types';&#10;&#10;const Projects: React.FC = () =&gt; {&#10;  const [projects, setProjects] = useState&lt;Project[]&gt;([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [showAll, setShowAll] = useState(false);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchProjects = async () =&gt; {&#10;      try {&#10;        const response = await projectsApi.getAll();&#10;        // Filter for featured projects or show first 6 if no featured flag&#10;        const featuredProjects = response.data.filter(project =&gt; project.isFeatured);&#10;        setProjects(featuredProjects.length &gt; 0 ? featuredProjects : response.data.slice(0, 6));&#10;      } catch (error) {&#10;        console.error('Error fetching projects:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchProjects();&#10;  }, []);&#10;&#10;  const displayedProjects = showAll ? projects : projects.slice(0, 6);&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;projects&quot; className=&quot;py-20 bg-gray-50&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-48 mx-auto mb-16&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8&quot;&gt;&#10;              {[...Array(6)].map((_, i) =&gt; (&#10;                &lt;div key={i} className=&quot;bg-white rounded-lg p-6 space-y-4&quot;&gt;&#10;                  &lt;div className=&quot;h-48 bg-gray-200 rounded&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-6 bg-gray-200 rounded w-3/4&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-4 bg-gray-200 rounded w-full&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-4 bg-gray-200 rounded w-2/3&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section id=&quot;projects&quot; className=&quot;py-20 bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          whileInView={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          viewport={{ once: true }}&#10;          className=&quot;text-center mb-16&quot;&#10;        &gt;&#10;          &lt;h2 className=&quot;text-4xl md:text-5xl font-bold text-gray-900 mb-4&quot;&gt;&#10;            Featured Projects&#10;          &lt;/h2&gt;&#10;          &lt;div className=&quot;w-20 h-1 bg-blue-600 mx-auto mb-6&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;text-xl text-gray-600 max-w-3xl mx-auto&quot;&gt;&#10;            Here are some of the projects I've worked on that showcase my skills and passion for development.&#10;          &lt;/p&gt;&#10;        &lt;/motion.div&gt;&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12&quot;&gt;&#10;          {displayedProjects.map((project, index) =&gt; (&#10;            &lt;motion.div&#10;              key={project.id}&#10;              initial={{ opacity: 0, y: 20 }}&#10;              whileInView={{ opacity: 1, y: 0 }}&#10;              transition={{ duration: 0.6, delay: index * 0.1 }}&#10;              viewport={{ once: true }}&#10;              className=&quot;bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2&quot;&#10;            &gt;&#10;              {/* Project Image */}&#10;              &lt;div className=&quot;relative h-48 bg-gradient-to-br from-blue-100 to-purple-100 overflow-hidden&quot;&gt;&#10;                {project.imageUrl ? (&#10;                  &lt;img&#10;                    src={project.imageUrl}&#10;                    alt={project.title}&#10;                    className=&quot;w-full h-full object-cover&quot;&#10;                  /&gt;&#10;                ) : (&#10;                  &lt;div className=&quot;w-full h-full flex items-center justify-center&quot;&gt;&#10;                    &lt;CodeBracketIcon className=&quot;w-16 h-16 text-blue-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                {/* Featured badge */}&#10;                {project.isFeatured &amp;&amp; (&#10;                  &lt;div className=&quot;absolute top-4 right-4&quot;&gt;&#10;                    &lt;span className=&quot;bg-blue-600 text-white px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                      Featured&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;&#10;              {/* Project Content */}&#10;              &lt;div className=&quot;p-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-gray-900 mb-2&quot;&gt;&#10;                  {project.title}&#10;                &lt;/h3&gt;&#10;&#10;                &lt;p className=&quot;text-gray-600 mb-4 line-clamp-3&quot;&gt;&#10;                  {project.shortDescription || project.description}&#10;                &lt;/p&gt;&#10;&#10;                {/* Technologies */}&#10;                &lt;div className=&quot;flex flex-wrap gap-2 mb-4&quot;&gt;&#10;                  {project.technologies.slice(0, 3).map((tech) =&gt; (&#10;                    &lt;span&#10;                      key={tech}&#10;                      className=&quot;px-2 py-1 bg-blue-100 text-blue-800 rounded-md text-xs font-medium&quot;&#10;                    &gt;&#10;                      {tech}&#10;                    &lt;/span&gt;&#10;                  ))}&#10;                  {project.technologies.length &gt; 3 &amp;&amp; (&#10;                    &lt;span className=&quot;px-2 py-1 bg-gray-100 text-gray-600 rounded-md text-xs font-medium&quot;&gt;&#10;                      +{project.technologies.length - 3} more&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;&#10;                {/* Project Links */}&#10;                &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                  &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                    {project.githubUrl &amp;&amp; (&#10;                      &lt;a&#10;                        href={project.githubUrl}&#10;                        target=&quot;_blank&quot;&#10;                        rel=&quot;noopener noreferrer&quot;&#10;                        className=&quot;text-gray-600 hover:text-blue-600 transition-colors&quot;&#10;                        title=&quot;View Source Code&quot;&#10;                      &gt;&#10;                        &lt;svg className=&quot;w-5 h-5&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                          &lt;path d=&quot;M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                      &lt;/a&gt;&#10;                    )}&#10;&#10;                    {project.liveUrl &amp;&amp; (&#10;                      &lt;a&#10;                        href={project.liveUrl}&#10;                        target=&quot;_blank&quot;&#10;                        rel=&quot;noopener noreferrer&quot;&#10;                        className=&quot;text-gray-600 hover:text-blue-600 transition-colors&quot;&#10;                        title=&quot;View Live Project&quot;&#10;                      &gt;&#10;                        &lt;ArrowTopRightOnSquareIcon className=&quot;w-5 h-5&quot; /&gt;&#10;                      &lt;/a&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;span className=&quot;text-sm text-gray-500&quot;&gt;&#10;                    {new Date(project.startDate).getFullYear()}&#10;                  &lt;/span&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/motion.div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;&#10;        {/* Show More Button */}&#10;        {projects.length &gt; 6 &amp;&amp; (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0 }}&#10;            whileInView={{ opacity: 1 }}&#10;            transition={{ duration: 0.8 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;text-center&quot;&#10;          &gt;&#10;            &lt;button&#10;              onClick={() =&gt; setShowAll(!showAll)}&#10;              className=&quot;px-8 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-all duration-200 transform hover:scale-105&quot;&#10;            &gt;&#10;              {showAll ? 'Show Less' : `Show All Projects (${projects.length})`}&#10;            &lt;/button&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;&#10;        {/* Empty State */}&#10;        {projects.length === 0 &amp;&amp; !loading &amp;&amp; (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0 }}&#10;            whileInView={{ opacity: 1 }}&#10;            transition={{ duration: 0.8 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;text-center py-12&quot;&#10;          &gt;&#10;            &lt;CodeBracketIcon className=&quot;w-16 h-16 text-gray-400 mx-auto mb-4&quot; /&gt;&#10;            &lt;h3 className=&quot;text-xl font-medium text-gray-900 mb-2&quot;&gt;No Projects Found&lt;/h3&gt;&#10;            &lt;p className=&quot;text-gray-600&quot;&gt;&#10;              Projects will appear here once they're added to your portfolio.&#10;            &lt;/p&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default Projects;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/Skills.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/Skills.tsx" />
              <option name="originalContent" value="import React, { useEffect, useState } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { skillsApi } from '../services/api';&#10;import { Skill } from '../types';&#10;&#10;const Skills: React.FC = () =&gt; {&#10;  const [skills, setSkills] = useState&lt;Skill[]&gt;([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [selectedCategory, setSelectedCategory] = useState&lt;string&gt;('all');&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchSkills = async () =&gt; {&#10;      try {&#10;        const response = await skillsApi.getAll();&#10;        setSkills(response.data);&#10;      } catch (error) {&#10;        console.error('Error fetching skills:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchSkills();&#10;  }, []);&#10;&#10;  // Group skills by category&#10;  const skillsByCategory = skills.reduce((acc, skill) =&gt; {&#10;    if (!acc[skill.category]) {&#10;      acc[skill.category] = [];&#10;    }&#10;    acc[skill.category].push(skill);&#10;    return acc;&#10;  }, {} as Record&lt;string, Skill[]&gt;);&#10;&#10;  const categories = ['all', ...Object.keys(skillsByCategory)];&#10;  const filteredSkills = selectedCategory === 'all' ? skills : skillsByCategory[selectedCategory] || [];&#10;&#10;  const getSkillColor = (level: number) =&gt; {&#10;    if (level &gt;= 8) return 'bg-green-500';&#10;    if (level &gt;= 6) return 'bg-blue-500';&#10;    if (level &gt;= 4) return 'bg-yellow-500';&#10;    return 'bg-gray-400';&#10;  };&#10;&#10;  const getSkillLevel = (level: number) =&gt; {&#10;    if (level &gt;= 8) return 'Expert';&#10;    if (level &gt;= 6) return 'Advanced';&#10;    if (level &gt;= 4) return 'Intermediate';&#10;    return 'Beginner';&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;skills&quot; className=&quot;py-20 bg-gray-50&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-48 mx-auto mb-16&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;flex justify-center mb-8 space-x-4&quot;&gt;&#10;              {[...Array(4)].map((_, i) =&gt; (&#10;                &lt;div key={i} className=&quot;h-8 bg-gray-200 rounded w-24&quot;&gt;&lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6&quot;&gt;&#10;              {[...Array(12)].map((_, i) =&gt; (&#10;                &lt;div key={i} className=&quot;bg-white rounded-lg p-4 space-y-3&quot;&gt;&#10;                  &lt;div className=&quot;h-4 bg-gray-200 rounded w-3/4&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-2 bg-gray-200 rounded w-full&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-3 bg-gray-200 rounded w-1/2&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section id=&quot;skills&quot; className=&quot;py-20 bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          whileInView={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          viewport={{ once: true }}&#10;          className=&quot;text-center mb-16&quot;&#10;        &gt;&#10;          &lt;h2 className=&quot;text-4xl md:text-5xl font-bold text-gray-900 mb-4&quot;&gt;&#10;            Skills &amp; Technologies&#10;          &lt;/h2&gt;&#10;          &lt;div className=&quot;w-20 h-1 bg-blue-600 mx-auto mb-6&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;text-xl text-gray-600 max-w-3xl mx-auto&quot;&gt;&#10;            The technologies and tools I use to bring ideas to life.&#10;          &lt;/p&gt;&#10;        &lt;/motion.div&gt;&#10;&#10;        {/* Category Filter */}&#10;        {categories.length &gt; 1 &amp;&amp; (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, y: 20 }}&#10;            whileInView={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.6, delay: 0.2 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;flex justify-center mb-12&quot;&#10;          &gt;&#10;            &lt;div className=&quot;inline-flex bg-white rounded-lg shadow-md p-1&quot;&gt;&#10;              {categories.map((category) =&gt; (&#10;                &lt;button&#10;                  key={category}&#10;                  onClick={() =&gt; setSelectedCategory(category)}&#10;                  className={`px-4 py-2 rounded-md text-sm font-medium transition-all duration-200 capitalize ${&#10;                    selectedCategory === category&#10;                      ? 'bg-blue-600 text-white shadow-sm'&#10;                      : 'text-gray-700 hover:text-blue-600 hover:bg-gray-50'&#10;                  }`}&#10;                &gt;&#10;                  {category}&#10;                &lt;/button&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;&#10;        {/* Skills Grid */}&#10;        {filteredSkills.length &gt; 0 ? (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0 }}&#10;            whileInView={{ opacity: 1 }}&#10;            transition={{ duration: 0.6, delay: 0.3 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6&quot;&#10;          &gt;&#10;            {filteredSkills.map((skill, index) =&gt; (&#10;              &lt;motion.div&#10;                key={skill.id}&#10;                initial={{ opacity: 0, y: 20 }}&#10;                whileInView={{ opacity: 1, y: 0 }}&#10;                transition={{ duration: 0.6, delay: index * 0.05 }}&#10;                viewport={{ once: true }}&#10;                className=&quot;bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1&quot;&#10;              &gt;&#10;                &lt;div className=&quot;text-center space-y-4&quot;&gt;&#10;                  {/* Skill Icon/Name */}&#10;                  &lt;div className=&quot;relative&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-900 mb-2&quot;&gt;&#10;                      {skill.name}&#10;                    &lt;/h3&gt;&#10;                    &lt;span className=&quot;text-xs text-gray-500 uppercase tracking-wide&quot;&gt;&#10;                      {skill.category}&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Skill Level Progress */}&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    &lt;div className=&quot;flex justify-between items-center text-sm&quot;&gt;&#10;                      &lt;span className=&quot;text-gray-600&quot;&gt;Proficiency&lt;/span&gt;&#10;                      &lt;span className={`font-medium ${&#10;                        skill.level &gt;= 8 ? 'text-green-600' :&#10;                        skill.level &gt;= 6 ? 'text-blue-600' :&#10;                        skill.level &gt;= 4 ? 'text-yellow-600' : 'text-gray-600'&#10;                      }`}&gt;&#10;                        {getSkillLevel(skill.level)}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;w-full bg-gray-200 rounded-full h-2&quot;&gt;&#10;                        initial={{ width: 0 }}&#10;                        whileInView={{ width: `${skill.level * 10}%` }}&#10;                        whileInView={{ width: `${skill.level * 10}%` }}&#10;                        viewport={{ once: true }}&#10;                        className={`h-2 rounded-full ${getSkillColor(skill.level)}`}&#10;                      &gt;&lt;/motion.div&gt;&#10;                        className={`h-2 rounded-full ${getSkillColor(skill.level)}`}&#10;&#10;                    &lt;div className=&quot;text-right&quot;&gt;&#10;                      &lt;span className=&quot;text-xs text-gray-500&quot;&gt;&#10;                        {skill.level}/10&#10;                      &lt;/span&gt;&#10;                        {skill.level}/10&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Featured badge */}&#10;                  {skill.isFeatured &amp;&amp; (&#10;                    &lt;div className=&quot;inline-flex items-center px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs font-medium&quot;&gt;&#10;                      ⭐ Featured&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;            ))}&#10;          &lt;/motion.div&gt;&#10;        ) : (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0 }}&#10;            whileInView={{ opacity: 1 }}&#10;            transition={{ duration: 0.8 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;text-center py-12&quot;&#10;          &gt;&#10;            &lt;svg className=&quot;w-16 h-16 text-gray-400 mx-auto mb-4&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;              &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z&quot; /&gt;&#10;            &lt;/svg&gt;&#10;            &lt;h3 className=&quot;text-xl font-medium text-gray-900 mb-2&quot;&gt;No Skills Found&lt;/h3&gt;&#10;            &lt;p className=&quot;text-gray-600&quot;&gt;&#10;              Skills will appear here once they're added to your portfolio.&#10;            &lt;/p&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;&#10;        {/* Skills Summary */}&#10;        {skills.length &gt; 0 &amp;&amp; (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, y: 20 }}&#10;            whileInView={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.4 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;mt-16 text-center&quot;&#10;          &gt;&#10;            &lt;div className=&quot;bg-white rounded-xl shadow-lg p-8&quot;&gt;&#10;              &lt;h3 className=&quot;text-2xl font-bold text-gray-900 mb-6&quot;&gt;Skills Overview&lt;/h3&gt;&#10;              &lt;div className=&quot;grid grid-cols-2 md:grid-cols-4 gap-8&quot;&gt;&#10;                &lt;div className=&quot;text-center&quot;&gt;&#10;                  &lt;div className=&quot;text-3xl font-bold text-blue-600 mb-2&quot;&gt;&#10;                    {skills.length}&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-gray-600 text-sm&quot;&gt;Total Skills&lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;text-center&quot;&gt;&#10;                  &lt;div className=&quot;text-3xl font-bold text-green-600 mb-2&quot;&gt;&#10;                    {skills.filter(s =&gt; s.level &gt;= 8).length}&#10;                  &lt;/div&gt;&#10;                    {skills.filter(s =&gt; s.level &gt;= 8).length}&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;text-center&quot;&gt;&#10;                  &lt;div className=&quot;text-3xl font-bold text-yellow-600 mb-2&quot;&gt;&#10;                    {Object.keys(skillsByCategory).length}&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-gray-600 text-sm&quot;&gt;Categories&lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;text-center&quot;&gt;&#10;                  &lt;div className=&quot;text-3xl font-bold text-purple-600 mb-2&quot;&gt;&#10;                    {skills.filter(s =&gt; s.isFeatured).length}&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-gray-600 text-sm&quot;&gt;Featured&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default Skills;&#10;" />
              <option name="updatedContent" value="import React, { useEffect, useState } from 'react';&#10;import { motion } from 'framer-motion';&#10;import { skillsApi } from '../services/api';&#10;import { Skill } from '../types';&#10;&#10;const Skills: React.FC = () =&gt; {&#10;  const [skills, setSkills] = useState&lt;Skill[]&gt;([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [selectedCategory, setSelectedCategory] = useState&lt;string&gt;('all');&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchSkills = async () =&gt; {&#10;      try {&#10;        const response = await skillsApi.getAll();&#10;        setSkills(response.data);&#10;      } catch (error) {&#10;        console.error('Error fetching skills:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchSkills();&#10;  }, []);&#10;&#10;  // Group skills by category&#10;  const skillsByCategory = skills.reduce((acc, skill) =&gt; {&#10;    if (!acc[skill.category]) {&#10;      acc[skill.category] = [];&#10;    }&#10;    acc[skill.category].push(skill);&#10;    return acc;&#10;  }, {} as Record&lt;string, Skill[]&gt;);&#10;&#10;  const categories = ['all', ...Object.keys(skillsByCategory)];&#10;  const filteredSkills = selectedCategory === 'all' ? skills : skillsByCategory[selectedCategory] || [];&#10;&#10;  const getSkillColor = (level: number) =&gt; {&#10;    if (level &gt;= 8) return 'bg-green-500';&#10;    if (level &gt;= 6) return 'bg-blue-500';&#10;    if (level &gt;= 4) return 'bg-yellow-500';&#10;    return 'bg-gray-400';&#10;  };&#10;&#10;  const getSkillLevel = (level: number) =&gt; {&#10;    if (level &gt;= 8) return 'Expert';&#10;    if (level &gt;= 6) return 'Advanced';&#10;    if (level &gt;= 4) return 'Intermediate';&#10;    return 'Beginner';&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;section id=&quot;skills&quot; className=&quot;py-20 bg-gray-50&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-48 mx-auto mb-16&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;flex justify-center mb-8 space-x-4&quot;&gt;&#10;              {[...Array(4)].map((_, i) =&gt; (&#10;                &lt;div key={i} className=&quot;h-8 bg-gray-200 rounded w-24&quot;&gt;&lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6&quot;&gt;&#10;              {[...Array(12)].map((_, i) =&gt; (&#10;                &lt;div key={i} className=&quot;bg-white rounded-lg p-4 space-y-3&quot;&gt;&#10;                  &lt;div className=&quot;h-4 bg-gray-200 rounded w-3/4&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-2 bg-gray-200 rounded w-full&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-3 bg-gray-200 rounded w-1/2&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/section&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;section id=&quot;skills&quot; className=&quot;py-20 bg-gray-50&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;motion.div&#10;          initial={{ opacity: 0, y: 20 }}&#10;          whileInView={{ opacity: 1, y: 0 }}&#10;          transition={{ duration: 0.8 }}&#10;          viewport={{ once: true }}&#10;          className=&quot;text-center mb-16&quot;&#10;        &gt;&#10;          &lt;h2 className=&quot;text-4xl md:text-5xl font-bold text-gray-900 mb-4&quot;&gt;&#10;            Skills &amp; Technologies&#10;          &lt;/h2&gt;&#10;          &lt;div className=&quot;w-20 h-1 bg-blue-600 mx-auto mb-6&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;text-xl text-gray-600 max-w-3xl mx-auto&quot;&gt;&#10;            The technologies and tools I use to bring ideas to life.&#10;          &lt;/p&gt;&#10;        &lt;/motion.div&gt;&#10;&#10;        {/* Category Filter */}&#10;        {categories.length &gt; 1 &amp;&amp; (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, y: 20 }}&#10;            whileInView={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.6, delay: 0.2 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;flex justify-center mb-12&quot;&#10;          &gt;&#10;            &lt;div className=&quot;inline-flex bg-white rounded-lg shadow-md p-1&quot;&gt;&#10;              {categories.map((category) =&gt; (&#10;                &lt;button&#10;                  key={category}&#10;                  onClick={() =&gt; setSelectedCategory(category)}&#10;                  className={`px-4 py-2 rounded-md text-sm font-medium transition-all duration-200 capitalize ${&#10;                    selectedCategory === category&#10;                      ? 'bg-blue-600 text-white shadow-sm'&#10;                      : 'text-gray-700 hover:text-blue-600 hover:bg-gray-50'&#10;                  }`}&#10;                &gt;&#10;                  {category}&#10;                &lt;/button&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;&#10;        {/* Skills Grid */}&#10;        {filteredSkills.length &gt; 0 ? (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0 }}&#10;            whileInView={{ opacity: 1 }}&#10;            transition={{ duration: 0.6, delay: 0.3 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6&quot;&#10;          &gt;&#10;            {filteredSkills.map((skill, index) =&gt; (&#10;              &lt;motion.div&#10;                key={skill.id}&#10;                initial={{ opacity: 0, y: 20 }}&#10;                whileInView={{ opacity: 1, y: 0 }}&#10;                transition={{ duration: 0.6, delay: index * 0.05 }}&#10;                viewport={{ once: true }}&#10;                className=&quot;bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1&quot;&#10;              &gt;&#10;                &lt;div className=&quot;text-center space-y-4&quot;&gt;&#10;                  {/* Skill Icon/Name */}&#10;                  &lt;div className=&quot;relative&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-900 mb-2&quot;&gt;&#10;                      {skill.name}&#10;                    &lt;/h3&gt;&#10;                    &lt;span className=&quot;text-xs text-gray-500 uppercase tracking-wide&quot;&gt;&#10;                      {skill.category}&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Skill Level Progress */}&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    &lt;div className=&quot;flex justify-between items-center mb-2&quot;&gt;&#10;                      &lt;span className=&quot;text-gray-600&quot;&gt;Proficiency&lt;/span&gt;&#10;                      &lt;span className={`font-medium ${&#10;                        skill.proficiencyLevel &gt;= 8 ? 'text-green-600' :&#10;                        skill.proficiencyLevel &gt;= 6 ? 'text-blue-600' :&#10;                        skill.proficiencyLevel &gt;= 4 ? 'text-yellow-600' : 'text-gray-600'&#10;                      }`}&gt;&#10;                        {getSkillLevel(skill.proficiencyLevel)}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Progress bar */}&#10;                    &lt;div className=&quot;w-full bg-gray-200 rounded-full h-2 mb-3&quot;&gt;&#10;                      &lt;motion.div&#10;                        initial={{ width: 0 }}&#10;                        whileInView={{ width: `${skill.proficiencyLevel * 10}%` }}&#10;                        transition={{ duration: 1, delay: index * 0.1 }}&#10;                        viewport={{ once: true }}&#10;                        className={`h-2 rounded-full ${getSkillColor(skill.proficiencyLevel)}`}&#10;                      &gt;&lt;/motion.div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;text-right&quot;&gt;&#10;                      &lt;span className=&quot;text-xs text-gray-500&quot;&gt;&#10;                        {skill.proficiencyLevel}/10&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Featured badge */}&#10;                  {skill.isFeatured &amp;&amp; (&#10;                    &lt;div className=&quot;inline-flex items-center px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs font-medium&quot;&gt;&#10;                      ⭐ Featured&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;            ))}&#10;          &lt;/motion.div&gt;&#10;        ) : (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0 }}&#10;            whileInView={{ opacity: 1 }}&#10;            transition={{ duration: 0.8 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;text-center py-12&quot;&#10;          &gt;&#10;            &lt;svg className=&quot;w-16 h-16 text-gray-400 mx-auto mb-4&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;              &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z&quot; /&gt;&#10;            &lt;/svg&gt;&#10;            &lt;h3 className=&quot;text-xl font-medium text-gray-900 mb-2&quot;&gt;No Skills Found&lt;/h3&gt;&#10;            &lt;p className=&quot;text-gray-600&quot;&gt;&#10;              Skills will appear here once they're added to your portfolio.&#10;            &lt;/p&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;&#10;        {/* Skills Summary */}&#10;        {skills.length &gt; 0 &amp;&amp; (&#10;          &lt;motion.div&#10;            initial={{ opacity: 0, y: 20 }}&#10;            whileInView={{ opacity: 1, y: 0 }}&#10;            transition={{ duration: 0.8, delay: 0.4 }}&#10;            viewport={{ once: true }}&#10;            className=&quot;mt-16 text-center&quot;&#10;          &gt;&#10;            &lt;div className=&quot;bg-white rounded-xl shadow-lg p-8&quot;&gt;&#10;              &lt;h3 className=&quot;text-2xl font-bold text-gray-900 mb-6&quot;&gt;Skills Overview&lt;/h3&gt;&#10;              &lt;div className=&quot;grid grid-cols-2 md:grid-cols-4 gap-8&quot;&gt;&#10;                &lt;div className=&quot;text-center&quot;&gt;&#10;                  &lt;div className=&quot;text-3xl font-bold text-blue-600 mb-2&quot;&gt;&#10;                    {skills.length}&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-gray-600 text-sm&quot;&gt;Total Skills&lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;text-center&quot;&gt;&#10;                  &lt;div className=&quot;text-3xl font-bold text-green-600 mb-2&quot;&gt;&#10;                    {skills.filter(s =&gt; s.proficiencyLevel &gt;= 8).length}&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-gray-600 text-sm&quot;&gt;Expert Level&lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;text-center&quot;&gt;&#10;                  &lt;div className=&quot;text-3xl font-bold text-yellow-600 mb-2&quot;&gt;&#10;                    {Object.keys(skillsByCategory).length}&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-gray-600 text-sm&quot;&gt;Categories&lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;text-center&quot;&gt;&#10;                  &lt;div className=&quot;text-3xl font-bold text-purple-600 mb-2&quot;&gt;&#10;                    {skills.filter(s =&gt; s.isFeatured).length}&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-gray-600 text-sm&quot;&gt;Featured&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/motion.div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  );&#10;};&#10;&#10;export default Skills;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/services/api.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/services/api.ts" />
              <option name="originalContent" value="import axios from 'axios';&#10;import { PersonalInfo, Project, Experience, Skill, PortfolioSummary } from '../types';&#10;};&#10;const BASE_URL = 'http://localhost:8082/api';&#10;export const projectsApi = {&#10;  getAll: () =&gt; api.get&lt;Project[]&gt;('/projects'),&#10;  baseURL: BASE_URL,&#10;  getById: (id: number) =&gt; api.get&lt;Project&gt;(`/projects/${id}`),&#10;  search: (query: string) =&gt; api.get&lt;Project[]&gt;(`/projects/search?query=${query}`),&#10;  getByTechnology: (technology: string) =&gt; api.get&lt;Project[]&gt;(`/projects/technology/${technology}`),&#10;  create: (data: Omit&lt;Project, 'id'&gt;) =&gt; api.post&lt;Project&gt;('/projects', data),&#10;  update: (id: number, data: Partial&lt;Project&gt;) =&gt; api.put&lt;Project&gt;(`/projects/${id}`, data),&#10;// Personal Info API&#10;export const personalInfoApi = {&#10;  get: () =&gt; api.get&lt;PersonalInfo&gt;('/personal-info'),&#10;  update: (data: Partial&lt;PersonalInfo&gt;) =&gt; api.put&lt;PersonalInfo&gt;('/personal-info', data),&#10;  create: (data: Omit&lt;PersonalInfo, 'id'&gt;) =&gt; api.post&lt;PersonalInfo&gt;('/personal-info', data),&#10;};&#10;&#10;  delete: (id: number) =&gt; api.delete(`/projects/${id}`),&#10;};&#10;  getAll: () =&gt; api.get&lt;Project[]&gt;('/projects'),&#10;  getFeatured: () =&gt; api.get&lt;Project[]&gt;('/projects/featured'),&#10;  getById: (id: number) =&gt; api.get&lt;Project&gt;(`/projects/${id}`),&#10;  search: (query: string) =&gt; api.get&lt;Project[]&gt;(`/projects/search?query=${query}`),&#10;  getByTechnology: (technology: string) =&gt; api.get&lt;Project[]&gt;(`/projects/technology/${technology}`),&#10;  create: (data: Omit&lt;Project, 'id'&gt;) =&gt; api.post&lt;Project&gt;('/projects', data),&#10;  update: (id: number, data: Partial&lt;Project&gt;) =&gt; api.put&lt;Project&gt;(`/projects/${id}`, data),&#10;  delete: (id: number) =&gt; api.delete(`/projects/${id}`),&#10;" />
              <option name="updatedContent" value="import axios, { AxiosResponse } from 'axios';&#10;import {&#10;  Project,&#10;  PersonalInfo,&#10;  Experience,&#10;  Skill,&#10;  SkillCategory,&#10;  PortfolioData,&#10;  CreateProject,&#10;  UpdateProject,&#10;  CreatePersonalInfo,&#10;  UpdatePersonalInfo,&#10;  CreateExperience,&#10;  UpdateExperience,&#10;  CreateSkill,&#10;  UpdateSkill&#10;} from '../types';&#10;&#10;// API Configuration&#10;const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';&#10;&#10;const api = axios.create({&#10;  baseURL: API_BASE_URL,&#10;  headers: {&#10;    'Content-Type': 'application/json',&#10;  },&#10;});&#10;&#10;// Projects API&#10;export const projectsApi = {&#10;  getAll: (): Promise&lt;AxiosResponse&lt;Project[]&gt;&gt; =&gt;&#10;    api.get('/api/projects'),&#10;&#10;  getFeatured: (): Promise&lt;AxiosResponse&lt;Project[]&gt;&gt; =&gt;&#10;    api.get('/api/projects/featured'),&#10;&#10;  getById: (id: number): Promise&lt;AxiosResponse&lt;Project&gt;&gt; =&gt;&#10;    api.get(`/api/projects/${id}`),&#10;&#10;  search: (query: string): Promise&lt;AxiosResponse&lt;Project[]&gt;&gt; =&gt;&#10;    api.get(`/api/projects/search?query=${encodeURIComponent(query)}`),&#10;&#10;  getByTechnology: (tech: string): Promise&lt;AxiosResponse&lt;Project[]&gt;&gt; =&gt;&#10;    api.get(`/api/projects/technology/${encodeURIComponent(tech)}`),&#10;&#10;  create: (data: CreateProject): Promise&lt;AxiosResponse&lt;Project&gt;&gt; =&gt;&#10;    api.post('/api/projects', data),&#10;&#10;  update: (id: number, data: UpdateProject): Promise&lt;AxiosResponse&lt;Project&gt;&gt; =&gt;&#10;    api.put(`/api/projects/${id}`, data),&#10;&#10;  delete: (id: number): Promise&lt;AxiosResponse&lt;void&gt;&gt; =&gt;&#10;    api.delete(`/api/projects/${id}`)&#10;};&#10;&#10;// Personal Info API&#10;export const personalInfoApi = {&#10;  get: (): Promise&lt;AxiosResponse&lt;PersonalInfo&gt;&gt; =&gt;&#10;    api.get('/api/personal-info'),&#10;&#10;  create: (data: CreatePersonalInfo): Promise&lt;AxiosResponse&lt;PersonalInfo&gt;&gt; =&gt;&#10;    api.post('/api/personal-info', data),&#10;&#10;  update: (data: UpdatePersonalInfo): Promise&lt;AxiosResponse&lt;PersonalInfo&gt;&gt; =&gt;&#10;    api.put('/api/personal-info', data)&#10;};&#10;&#10;// Experience API&#10;export const experienceApi = {&#10;  getAll: (): Promise&lt;AxiosResponse&lt;Experience[]&gt;&gt; =&gt;&#10;    api.get('/api/experiences'),&#10;&#10;  getCurrent: (): Promise&lt;AxiosResponse&lt;Experience[]&gt;&gt; =&gt;&#10;    api.get('/api/experiences/current'),&#10;&#10;  getById: (id: number): Promise&lt;AxiosResponse&lt;Experience&gt;&gt; =&gt;&#10;    api.get(`/api/experiences/${id}`),&#10;&#10;  searchByCompany: (company: string): Promise&lt;AxiosResponse&lt;Experience[]&gt;&gt; =&gt;&#10;    api.get(`/api/experiences/search/company?company=${encodeURIComponent(company)}`),&#10;&#10;  searchByPosition: (position: string): Promise&lt;AxiosResponse&lt;Experience[]&gt;&gt; =&gt;&#10;    api.get(`/api/experiences/search/position?position=${encodeURIComponent(position)}`),&#10;&#10;  create: (data: CreateExperience): Promise&lt;AxiosResponse&lt;Experience&gt;&gt; =&gt;&#10;    api.post('/api/experiences', data),&#10;&#10;  update: (id: number, data: UpdateExperience): Promise&lt;AxiosResponse&lt;Experience&gt;&gt; =&gt;&#10;    api.put(`/api/experiences/${id}`, data),&#10;&#10;  delete: (id: number): Promise&lt;AxiosResponse&lt;void&gt;&gt; =&gt;&#10;    api.delete(`/api/experiences/${id}`)&#10;};&#10;&#10;// Skills API&#10;export const skillsApi = {&#10;  getAll: (): Promise&lt;AxiosResponse&lt;Skill[]&gt;&gt; =&gt;&#10;    api.get('/api/skills'),&#10;&#10;  getByCategory: (category: SkillCategory): Promise&lt;AxiosResponse&lt;Skill[]&gt;&gt; =&gt;&#10;    api.get(`/api/skills/category/${category}`),&#10;&#10;  getById: (id: number): Promise&lt;AxiosResponse&lt;Skill&gt;&gt; =&gt;&#10;    api.get(`/api/skills/${id}`),&#10;&#10;  create: (data: CreateSkill): Promise&lt;AxiosResponse&lt;Skill&gt;&gt; =&gt;&#10;    api.post('/api/skills', data),&#10;&#10;  update: (id: number, data: UpdateSkill): Promise&lt;AxiosResponse&lt;Skill&gt;&gt; =&gt;&#10;    api.put(`/api/skills/${id}`, data),&#10;&#10;  delete: (id: number): Promise&lt;AxiosResponse&lt;void&gt;&gt; =&gt;&#10;    api.delete(`/api/skills/${id}`)&#10;};&#10;&#10;// Portfolio Summary API&#10;export const portfolioApi = {&#10;  getComplete: (): Promise&lt;AxiosResponse&lt;PortfolioData&gt;&gt; =&gt;&#10;    api.get('/api/portfolio')&#10;};&#10;&#10;// Error handling utility&#10;export const handleApiError = (error: any) =&gt; {&#10;  if (error.response) {&#10;    // Server responded with error status&#10;    console.error('API Error:', error.response.data);&#10;    return error.response.data.message || 'An error occurred';&#10;  } else if (error.request) {&#10;    // Request made but no response received&#10;    console.error('Network Error:', error.request);&#10;    return 'Network error - please check your connection';&#10;  } else {&#10;    // Something else happened&#10;    console.error('Error:', error.message);&#10;    return error.message;&#10;  }&#10;};&#10;&#10;export default api;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/types/index.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/types/index.ts" />
              <option name="originalContent" value="// Types based on Spring Boot backend API models&#10;&#10;export interface Project {&#10;  id: number;&#10;  title: string;&#10;  description: string;&#10;  shortDescription: string;&#10;  imageUrl: string;&#10;  githubUrl?: string;&#10;  liveUrl?: string;&#10;  technologies: string[];&#10;  startDate: string;&#10;  endDate?: string;&#10;  isFeatured: boolean;&#10;  displayOrder: number;&#10;}&#10;&#10;export interface PersonalInfo {&#10;  id: number;&#10;  fullName: string;&#10;  title: string;&#10;  email: string;&#10;  phone?: string;&#10;  location?: string;&#10;  summary: string;&#10;  linkedinUrl?: string;&#10;  githubUrl?: string;&#10;  portfolioUrl?: string;&#10;  resumeUrl?: string;&#10;  twitterUrl?: string;&#10;  position: string;&#10;  description: string;&#10;  startDate: string;&#10;  endDate?: string;&#10;  isCurrent: boolean;&#10;  location?: string;&#10;  technologies: string[];&#10;}&#10;&#10;export interface Skill {&#10;  id: number;&#10;  name: string;&#10;}&#10;&#10;export enum SkillCategory {&#10;  FRONTEND = 'FRONTEND',&#10;  BACKEND = 'BACKEND',&#10;  DATABASE = 'DATABASE',&#10;  TOOLS = 'TOOLS',&#10;  OTHER = 'OTHER'&#10;}&#10;&#10;export interface PortfolioData {&#10;  personalInfo: PersonalInfo;&#10;  projects: Project[];&#10;&#10;// API Response types&#10;export interface ApiResponse&lt;T&gt; {&#10;  data: T;&#10;  message?: string;&#10;}&#10;&#10;// Create/Update types (without id)&#10;export type CreateProject = Omit&lt;Project, 'id'&gt;;&#10;export type UpdateProject = Partial&lt;Omit&lt;Project, 'id'&gt;&gt;;&#10;&#10;export type CreatePersonalInfo = Omit&lt;PersonalInfo, 'id'&gt;;&#10;export type UpdatePersonalInfo = Partial&lt;Omit&lt;PersonalInfo, 'id'&gt;&gt;;&#10;&#10;export type CreateExperience = Omit&lt;Experience, 'id'&gt;;&#10;export type UpdateExperience = Partial&lt;Omit&lt;Experience, 'id'&gt;&gt;;&#10;&#10;export type CreateSkill = Omit&lt;Skill, 'id'&gt;;&#10;export type UpdateSkill = Partial&lt;Omit&lt;Skill, 'id'&gt;&gt;;&#10;" />
              <option name="updatedContent" value="// Types based on Spring Boot backend API models&#10;&#10;export interface Project {&#10;  id: number;&#10;  title: string;&#10;  description: string;&#10;  shortDescription: string;&#10;  imageUrl: string;&#10;  githubUrl?: string;&#10;  liveUrl?: string;&#10;  technologies: string[];&#10;  startDate: string;&#10;  endDate?: string;&#10;  isFeatured: boolean;&#10;  displayOrder: number;&#10;}&#10;&#10;export interface PersonalInfo {&#10;  id: number;&#10;  fullName: string;&#10;  title: string;&#10;  email: string;&#10;  phone?: string;&#10;  location?: string;&#10;  summary: string;&#10;  linkedinUrl?: string;&#10;  githubUrl?: string;&#10;  portfolioUrl?: string;&#10;  resumeUrl?: string;&#10;  twitterUrl?: string;&#10;  // Adding frontend-specific properties for backward compatibility&#10;  name?: string; // Will map to fullName&#10;  jobTitle?: string; // Will map to title&#10;  bio?: string; // Will map to summary&#10;  profileImageUrl?: string; // For profile image&#10;}&#10;&#10;export interface Experience {&#10;  id: number;&#10;  company: string;&#10;  position: string;&#10;  description: string;&#10;  startDate: string;&#10;  endDate?: string;&#10;  isCurrent: boolean;&#10;  location?: string;&#10;  technologies: string[];&#10;  // Adding frontend-specific properties&#10;  companyUrl?: string;&#10;  responsibilities?: string[];&#10;}&#10;&#10;export interface Skill {&#10;  id: number;&#10;  name: string;&#10;  category: SkillCategory;&#10;  proficiencyLevel: number;&#10;  yearsOfExperience: number;&#10;  // Adding frontend-specific properties for backward compatibility&#10;  level?: number; // Will map to proficiencyLevel&#10;  isFeatured?: boolean;&#10;}&#10;&#10;export enum SkillCategory {&#10;  FRONTEND = 'FRONTEND',&#10;  BACKEND = 'BACKEND',&#10;  DATABASE = 'DATABASE',&#10;  TOOLS = 'TOOLS',&#10;  OTHER = 'OTHER'&#10;}&#10;&#10;export interface PortfolioData {&#10;  personalInfo: PersonalInfo;&#10;  projects: Project[];&#10;  experiences: Experience[];&#10;  skills: Skill[];&#10;}&#10;&#10;// API Response types&#10;export interface ApiResponse&lt;T&gt; {&#10;  data: T;&#10;  message?: string;&#10;}&#10;&#10;// Create/Update types (without id)&#10;export type CreateProject = Omit&lt;Project, 'id'&gt;;&#10;export type UpdateProject = Partial&lt;Omit&lt;Project, 'id'&gt;&gt;;&#10;&#10;export type CreatePersonalInfo = Omit&lt;PersonalInfo, 'id'&gt;;&#10;export type UpdatePersonalInfo = Partial&lt;Omit&lt;PersonalInfo, 'id'&gt;&gt;;&#10;&#10;export type CreateExperience = Omit&lt;Experience, 'id'&gt;;&#10;export type UpdateExperience = Partial&lt;Omit&lt;Experience, 'id'&gt;&gt;;&#10;&#10;export type CreateSkill = Omit&lt;Skill, 'id'&gt;;&#10;export type UpdateSkill = Partial&lt;Omit&lt;Skill, 'id'&gt;&gt;;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>