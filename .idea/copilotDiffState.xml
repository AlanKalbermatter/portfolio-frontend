<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/services/api.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/services/api.ts" />
              <option name="originalContent" value="import axios from 'axios';&#10;import { PersonalInfo, Project, Experience, Skill, PortfolioSummary } from '../types';&#10;&#10;const BASE_URL = 'http://localhost:8082/api';&#10;&#10;const api = axios.create({&#10;  baseURL: BASE_URL,&#10;  headers: {&#10;    'Content-Type': 'application/json',&#10;  },&#10;});&#10;&#10;// Personal Info API&#10;export const personalInfoApi = {&#10;  get: () =&gt; api.get&lt;PersonalInfo&gt;('/personal-info'),&#10;  update: (data: Partial&lt;PersonalInfo&gt;) =&gt; api.put&lt;PersonalInfo&gt;('/personal-info', data),&#10;  create: (data: Omit&lt;PersonalInfo, 'id'&gt;) =&gt; api.post&lt;PersonalInfo&gt;('/personal-info', data),&#10;};&#10;&#10;// Projects API&#10;export const projectsApi = {&#10;  getAll: () =&gt; api.get&lt;Project[]&gt;('/projects'),&#10;  getFeatured: () =&gt; api.get&lt;Project[]&gt;('/projects/featured'),&#10;  getById: (id: number) =&gt; api.get&lt;Project&gt;(`/projects/${id}`),&#10;  search: (query: string) =&gt; api.get&lt;Project[]&gt;(`/projects/search?query=${query}`),&#10;  getByTechnology: (technology: string) =&gt; api.get&lt;Project[]&gt;(`/projects/technology/${technology}`),&#10;  create: (data: Omit&lt;Project, 'id'&gt;) =&gt; api.post&lt;Project&gt;('/projects', data),&#10;  update: (id: number, data: Partial&lt;Project&gt;) =&gt; api.put&lt;Project&gt;(`/projects/${id}`, data),&#10;  delete: (id: number) =&gt; api.delete(`/projects/${id}`),&#10;};&#10;&#10;// Experiences API&#10;export const experiencesApi = {&#10;  getAll: () =&gt; api.get&lt;Experience[]&gt;('/experiences'),&#10;  getCurrent: () =&gt; api.get&lt;Experience[]&gt;('/experiences/current'),&#10;  getById: (id: number) =&gt; api.get&lt;Experience&gt;(`/experiences/${id}`),&#10;  searchByCompany: (company: string) =&gt; api.get&lt;Experience[]&gt;(`/experiences/search/company?company=${company}`),&#10;  searchByPosition: (position: string) =&gt; api.get&lt;Experience[]&gt;(`/experiences/search/position?position=${position}`),&#10;  create: (data: Omit&lt;Experience, 'id'&gt;) =&gt; api.post&lt;Experience&gt;('/experiences', data),&#10;  update: (id: number, data: Partial&lt;Experience&gt;) =&gt; api.put&lt;Experience&gt;(`/experiences/${id}`, data),&#10;  delete: (id: number) =&gt; api.delete(`/experiences/${id}`),&#10;};&#10;&#10;// Skills API&#10;export const skillsApi = {&#10;  getAll: () =&gt; api.get&lt;Skill[]&gt;('/skills'),&#10;  getFeatured: () =&gt; api.get&lt;Skill[]&gt;('/skills/featured'),&#10;  getByCategory: (category: string) =&gt; api.get&lt;Skill[]&gt;(`/skills/category/${category}`),&#10;  getById: (id: number) =&gt; api.get&lt;Skill&gt;(`/skills/${id}`),&#10;  search: (name: string) =&gt; api.get&lt;Skill[]&gt;(`/skills/search?name=${name}`),&#10;  getByLevel: (level: number) =&gt; api.get&lt;Skill[]&gt;(`/skills/level/${level}`),&#10;  create: (data: Omit&lt;Skill, 'id'&gt;) =&gt; api.post&lt;Skill&gt;('/skills', data),&#10;  update: (id: number, data: Partial&lt;Skill&gt;) =&gt; api.put&lt;Skill&gt;(`/skills/${id}`, data),&#10;  delete: (id: number) =&gt; api.delete(`/skills/${id}`),&#10;};&#10;&#10;// Portfolio API&#10;export const portfolioApi = {&#10;  getSummary: () =&gt; api.get&lt;PortfolioSummary&gt;('/portfolio/summary'),&#10;  getHealth: () =&gt; api.get&lt;{ status: string; message: string }&gt;('/portfolio/health'),&#10;};&#10;&#10;export default api;&#10;" />
              <option name="updatedContent" value="import axios from 'axios';&#10;import { PersonalInfo, Project, Experience, Skill } from '../types';&#10;&#10;const BASE_URL = 'http://localhost:8080/api';&#10;&#10;const api = axios.create({&#10;  baseURL: BASE_URL,&#10;  headers: {&#10;    'Content-Type': 'application/json',&#10;  },&#10;});&#10;&#10;// Personal Info API&#10;export const personalInfoApi = {&#10;  get: () =&gt; api.get&lt;PersonalInfo&gt;('/personal-info'),&#10;  update: (id: number, data: Partial&lt;PersonalInfo&gt;) =&gt; api.put&lt;PersonalInfo&gt;(`/personal-info/${id}`, data),&#10;};&#10;&#10;// Projects API&#10;export const projectsApi = {&#10;  getAll: () =&gt; api.get&lt;Project[]&gt;('/projects'),&#10;  create: (data: Omit&lt;Project, 'id'&gt;) =&gt; api.post&lt;Project&gt;('/projects', data),&#10;  update: (id: number, data: Partial&lt;Project&gt;) =&gt; api.put&lt;Project&gt;(`/projects/${id}`, data),&#10;  delete: (id: number) =&gt; api.delete(`/projects/${id}`),&#10;};&#10;&#10;// Experiences API&#10;export const experiencesApi = {&#10;  getAll: () =&gt; api.get&lt;Experience[]&gt;('/experiences'),&#10;  create: (data: Omit&lt;Experience, 'id'&gt;) =&gt; api.post&lt;Experience&gt;('/experiences', data),&#10;  update: (id: number, data: Partial&lt;Experience&gt;) =&gt; api.put&lt;Experience&gt;(`/experiences/${id}`, data),&#10;  delete: (id: number) =&gt; api.delete(`/experiences/${id}`),&#10;};&#10;&#10;// Skills API&#10;export const skillsApi = {&#10;  getAll: () =&gt; api.get&lt;Skill[]&gt;('/skills'),&#10;  create: (data: Omit&lt;Skill, 'id'&gt;) =&gt; api.post&lt;Skill&gt;('/skills', data),&#10;  update: (id: number, data: Partial&lt;Skill&gt;) =&gt; api.put&lt;Skill&gt;(`/skills/${id}`, data),&#10;  delete: (id: number) =&gt; api.delete(`/skills/${id}`),&#10;};&#10;&#10;// Portfolio summary (all info)&#10;export const portfolioApi = {&#10;  get: () =&gt; api.get('/portfolio'),&#10;};&#10;&#10;export default api;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>